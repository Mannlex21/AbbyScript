
//----------------------------------------------------
// The following code was generated by CUP v0.11a beta 20060608
// Tue Nov 28 21:22:57 GMT-06:00 2017
//----------------------------------------------------

package mx.edu.ittepic.automatas;

import java_cup.runtime.*;
import java.io.FileReader;
import java.util.*;

/** CUP v0.11a beta 20060608 generated parser.
  * @version Tue Nov 28 21:22:57 GMT-06:00 2017
  */
public class CupObjeto extends java_cup.runtime.lr_parser {

  /** Default constructor. */
  public CupObjeto() {super();}

  /** Constructor which sets the default scanner. */
  public CupObjeto(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public CupObjeto(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\u0114\000\002\002\004\000\002\002\003\000\002\002" +
    "\004\000\002\002\003\000\002\047\007\000\002\047\003" +
    "\000\002\047\006\000\002\047\006\000\002\047\006\000" +
    "\002\047\006\000\002\047\006\000\002\031\003\000\002" +
    "\031\004\000\002\020\003\000\002\020\004\000\002\020" +
    "\003\000\002\020\004\000\002\021\006\000\002\021\005" +
    "\000\002\021\004\000\002\021\004\000\002\021\004\000" +
    "\002\021\005\000\002\021\005\000\002\021\005\000\002" +
    "\012\007\000\002\012\007\000\002\012\007\000\002\012" +
    "\007\000\002\022\012\000\002\022\012\000\002\022\012" +
    "\000\002\022\012\000\002\022\012\000\002\022\012\000" +
    "\002\022\013\000\002\032\003\000\002\032\003\000\002" +
    "\023\005\000\002\023\006\000\002\023\004\000\002\023" +
    "\004\000\002\023\004\000\002\023\002\000\002\027\006" +
    "\000\002\027\007\000\002\027\005\000\002\027\005\000" +
    "\002\027\005\000\002\027\005\000\002\026\003\000\002" +
    "\026\003\000\002\026\003\000\002\026\005\000\002\026" +
    "\005\000\002\006\003\000\002\006\004\000\002\006\003" +
    "\000\002\006\004\000\002\006\003\000\002\006\004\000" +
    "\002\006\003\000\002\006\004\000\002\006\003\000\002" +
    "\006\004\000\002\006\003\000\002\006\004\000\002\006" +
    "\003\000\002\006\004\000\002\006\003\000\002\006\004" +
    "\000\002\006\003\000\002\006\004\000\002\035\006\000" +
    "\002\035\006\000\002\035\006\000\002\035\006\000\002" +
    "\036\010\000\002\036\006\000\002\036\010\000\002\036" +
    "\010\000\002\036\010\000\002\036\010\000\002\036\010" +
    "\000\002\036\010\000\002\036\006\000\002\036\006\000" +
    "\002\036\006\000\002\045\003\000\002\045\003\000\002" +
    "\045\003\000\002\040\006\000\002\040\010\000\002\040" +
    "\005\000\002\040\006\000\002\040\006\000\002\040\006" +
    "\000\002\040\006\000\002\040\010\000\002\040\010\000" +
    "\002\040\010\000\002\040\010\000\002\040\010\000\002" +
    "\040\010\000\002\040\005\000\002\040\005\000\002\040" +
    "\005\000\002\041\003\000\002\041\003\000\002\042\003" +
    "\000\002\042\003\000\002\042\003\000\002\042\003\000" +
    "\002\042\003\000\002\042\003\000\002\042\003\000\002" +
    "\042\003\000\002\043\003\000\002\037\006\000\002\037" +
    "\005\000\002\037\006\000\002\037\006\000\002\037\006" +
    "\000\002\044\012\000\002\044\012\000\002\044\012\000" +
    "\002\044\012\000\002\044\012\000\002\044\012\000\002" +
    "\044\012\000\002\044\012\000\002\033\005\000\002\033" +
    "\022\000\002\033\022\000\002\033\022\000\002\033\022" +
    "\000\002\033\022\000\002\033\022\000\002\033\022\000" +
    "\002\033\022\000\002\033\022\000\002\033\022\000\002" +
    "\033\022\000\002\033\022\000\002\033\022\000\002\033" +
    "\022\000\002\033\022\000\002\033\022\000\002\034\003" +
    "\000\002\034\005\000\002\034\003\000\002\034\004\000" +
    "\002\046\006\000\002\046\005\000\002\003\007\000\002" +
    "\003\010\000\002\003\007\000\002\003\007\000\002\003" +
    "\007\000\002\003\007\000\002\014\011\000\002\014\010" +
    "\000\002\014\010\000\002\014\010\000\002\014\010\000" +
    "\002\014\010\000\002\014\011\000\002\014\011\000\002" +
    "\014\011\000\002\014\011\000\002\013\007\000\002\013" +
    "\007\000\002\013\007\000\002\013\007\000\002\013\006" +
    "\000\002\013\006\000\002\013\006\000\002\013\006\000" +
    "\002\015\006\000\002\015\006\000\002\015\006\000\002" +
    "\015\006\000\002\016\005\000\002\016\003\000\002\017" +
    "\004\000\002\017\004\000\002\017\004\000\002\017\004" +
    "\000\002\024\003\000\002\024\003\000\002\024\004\000" +
    "\002\024\004\000\002\004\007\000\002\004\006\000\002" +
    "\004\006\000\002\004\006\000\002\004\006\000\002\004" +
    "\005\000\002\004\005\000\002\004\005\000\002\004\005" +
    "\000\002\004\007\000\002\004\007\000\002\004\007\000" +
    "\002\004\007\000\002\004\007\000\002\004\006\000\002" +
    "\004\006\000\002\004\006\000\002\025\003\000\002\025" +
    "\003\000\002\025\003\000\002\025\004\000\002\025\004" +
    "\000\002\007\003\000\002\007\003\000\002\007\003\000" +
    "\002\007\003\000\002\007\003\000\002\005\003\000\002" +
    "\005\003\000\002\005\003\000\002\005\003\000\002\005" +
    "\003\000\002\005\003\000\002\005\003\000\002\010\012" +
    "\000\002\010\010\000\002\010\011\000\002\010\011\000" +
    "\002\010\012\000\002\010\012\000\002\010\012\000\002" +
    "\010\012\000\002\010\012\000\002\010\011\000\002\010" +
    "\011\000\002\010\011\000\002\010\012\000\002\010\012" +
    "\000\002\010\011\000\002\010\011\000\002\010\011\000" +
    "\002\010\011\000\002\010\011\000\002\010\010\000\002" +
    "\010\010\000\002\010\010\000\002\010\010\000\002\010" +
    "\011\000\002\010\011\000\002\010\011\000\002\010\011" +
    "\000\002\010\011\000\002\010\011\000\002\010\010\000" +
    "\002\010\010\000\002\010\010\000\002\010\010\000\002" +
    "\010\011\000\002\010\010\000\002\010\010\000\002\010" +
    "\010\000\002\010\010\000\002\010\010\000\002\010\007" +
    "\000\002\010\007\000\002\010\007\000\002\010\010\000" +
    "\002\010\010\000\002\011\003\000\002\011\004\000\002" +
    "\030\004\000\002\030\005\000\002\030\004\000\002\030" +
    "\003" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\u02aa\000\010\003\005\013\006\104\004\001\002\000" +
    "\004\044\u02aa\001\002\000\004\002\ufffe\001\002\000\012" +
    "\002\ufffc\021\ufffc\044\034\104\033\001\002\000\006\002" +
    "\000\021\012\001\002\000\004\002\011\001\002\000\004" +
    "\002\001\001\002\000\006\003\015\024\014\001\002\000" +
    "\004\002\uffff\001\002\000\006\003\022\104\021\001\002" +
    "\000\004\104\016\001\002\000\004\044\017\001\002\000" +
    "\004\045\020\001\002\000\004\002\uff65\001\002\000\006" +
    "\003\025\044\026\001\002\000\004\044\023\001\002\000" +
    "\004\045\024\001\002\000\004\002\uff64\001\002\000\004" +
    "\045\032\001\002\000\006\003\027\045\030\001\002\000" +
    "\004\002\uff62\001\002\000\006\002\uff67\021\012\001\002" +
    "\000\004\002\uff66\001\002\000\004\002\uff63\001\002\000" +
    "\006\011\036\044\u02a5\001\002\000\006\011\036\044\037" +
    "\001\002\000\014\002\ufff6\010\u0255\021\ufff6\022\u0259\045" +
    "\ufff6\001\002\000\040\003\062\012\072\014\052\016\067" +
    "\044\u0250\045\u024f\075\057\104\053\117\063\120\046\123" +
    "\055\127\044\164\054\165\061\167\047\001\002\000\036" +
    "\003\062\012\072\014\052\016\067\045\064\075\057\104" +
    "\053\117\063\120\046\123\055\127\044\164\054\165\061" +
    "\167\047\001\002\000\004\045\041\001\002\000\006\002" +
    "\ufff9\021\ufff9\001\002\000\046\002\uffc8\003\uffc8\010\uffc8" +
    "\012\uffc8\014\uffc8\016\uffc8\021\uffc8\022\uffc8\045\uffc8\075" +
    "\uffc8\104\uffc8\117\uffc8\120\uffc8\123\uffc8\127\uffc8\164\uffc8" +
    "\165\uffc8\167\uffc8\001\002\000\006\003\u023a\042\u023b\001" +
    "\002\000\006\003\u0231\042\u0232\001\002\000\036\003\062" +
    "\012\072\014\052\016\067\045\u0230\075\057\104\053\117" +
    "\063\120\046\123\055\127\044\164\054\165\061\167\047" +
    "\001\002\000\006\003\uffa8\042\uffa8\001\002\000\006\003" +
    "\u020d\042\u020e\001\002\000\046\002\uffca\003\uffca\010\uffca" +
    "\012\uffca\014\uffca\016\uffca\021\uffca\022\uffca\045\uffca\075" +
    "\uffca\104\uffca\117\uffca\120\uffca\123\uffca\127\uffca\164\uffca" +
    "\165\uffca\167\uffca\001\002\000\046\002\uffbc\003\uffbc\010" +
    "\uffbc\012\uffbc\014\uffbc\016\uffbc\021\uffbc\022\uffbc\045\uffbc" +
    "\075\uffbc\104\uffbc\117\uffbc\120\uffbc\123\uffbc\127\uffbc\164" +
    "\uffbc\165\uffbc\167\uffbc\001\002\000\010\003\u019e\042\u019f" +
    "\104\u019d\001\002\000\020\003\u017f\042\u0180\075\u017e\104" +
    "\100\106\102\107\077\163\103\001\002\000\006\003\360" +
    "\042\361\001\002\000\006\003\uffa7\042\uffa7\001\002\000" +
    "\046\002\uffc0\003\uffc0\010\uffc0\012\uffc0\014\uffc0\016\uffc0" +
    "\021\uffc0\022\uffc0\045\uffc0\075\uffc0\104\uffc0\117\uffc0\120" +
    "\uffc0\123\uffc0\127\uffc0\164\uffc0\165\uffc0\167\uffc0\001\002" +
    "\000\012\104\100\106\102\107\077\163\103\001\002\000" +
    "\046\002\uffbe\003\uffbe\010\uffbe\012\uffbe\014\uffbe\016\uffbe" +
    "\021\uffbe\022\uffbe\045\uffbe\075\uffbe\104\uffbe\117\uffbe\120" +
    "\uffbe\123\uffbe\127\uffbe\164\uffbe\165\uffbe\167\uffbe\001\002" +
    "\000\004\044\352\001\002\000\004\042\143\001\002\000" +
    "\006\003\uffa9\042\uffa9\001\002\000\014\002\uffec\010\uffec" +
    "\021\uffec\022\uffec\045\uffec\001\002\000\046\002\uffba\003" +
    "\uffba\010\uffba\012\uffba\014\uffba\016\uffba\021\uffba\022\uffba" +
    "\045\uffba\075\uffba\104\uffba\117\uffba\120\uffba\123\uffba\127" +
    "\uffba\164\uffba\165\uffba\167\uffba\001\002\000\046\002\uffc2" +
    "\003\uffc2\010\uffc2\012\uffc2\014\uffc2\016\uffc2\021\uffc2\022" +
    "\uffc2\045\uffc2\075\uffc2\104\uffc2\117\uffc2\120\uffc2\123\uffc2" +
    "\127\uffc2\164\uffc2\165\uffc2\167\uffc2\001\002\000\006\003" +
    "\126\042\127\001\002\000\046\002\uffc4\003\uffc4\010\uffc4" +
    "\012\uffc4\014\uffc4\016\uffc4\021\uffc4\022\uffc4\045\uffc4\075" +
    "\uffc4\104\uffc4\117\uffc4\120\uffc4\123\uffc4\127\uffc4\164\uffc4" +
    "\165\uffc4\167\uffc4\001\002\000\046\002\uffc6\003\uffc6\010" +
    "\uffc6\012\uffc6\014\uffc6\016\uffc6\021\uffc6\022\uffc6\045\uffc6" +
    "\075\uffc6\104\uffc6\117\uffc6\120\uffc6\123\uffc6\127\uffc6\164" +
    "\uffc6\165\uffc6\167\uffc6\001\002\000\010\003\075\075\074" +
    "\104\073\001\002\000\020\003\113\051\114\075\112\104" +
    "\100\106\102\107\077\163\103\001\002\000\012\104\100" +
    "\106\102\107\077\163\103\001\002\000\004\075\076\001" +
    "\002\000\012\104\100\106\102\107\077\163\103\001\002" +
    "\000\012\003\uff30\043\uff30\051\uff30\163\106\001\002\000" +
    "\010\003\uff2f\043\uff2f\051\uff2f\001\002\000\004\051\105" +
    "\001\002\000\010\003\uff2e\043\uff2e\051\uff2e\001\002\000" +
    "\004\107\104\001\002\000\010\003\uff2c\043\uff2c\051\uff2c" +
    "\001\002\000\046\002\uff38\003\uff38\010\uff38\012\uff38\014" +
    "\uff38\016\uff38\021\uff38\022\uff38\045\uff38\075\uff38\104\uff38" +
    "\117\uff38\120\uff38\123\uff38\127\uff38\164\uff38\165\uff38\167" +
    "\uff38\001\002\000\010\003\uff2d\043\uff2d\051\uff2d\001\002" +
    "\000\004\051\110\001\002\000\046\002\uff3d\003\uff3d\010" +
    "\uff3d\012\uff3d\014\uff3d\016\uff3d\021\uff3d\022\uff3d\045\uff3d" +
    "\075\uff3d\104\uff3d\117\uff3d\120\uff3d\123\uff3d\127\uff3d\164" +
    "\uff3d\165\uff3d\167\uff3d\001\002\000\004\051\125\001\002" +
    "\000\016\003\120\051\121\104\100\106\102\107\077\163" +
    "\103\001\002\000\012\104\100\106\102\107\077\163\103" +
    "\001\002\000\046\002\uff3c\003\uff3c\010\uff3c\012\uff3c\014" +
    "\uff3c\016\uff3c\021\uff3c\022\uff3c\045\uff3c\075\uff3c\104\uff3c" +
    "\117\uff3c\120\uff3c\123\uff3c\127\uff3c\164\uff3c\165\uff3c\167" +
    "\uff3c\001\002\000\004\051\116\001\002\000\046\002\uff37" +
    "\003\uff37\010\uff37\012\uff37\014\uff37\016\uff37\021\uff37\022" +
    "\uff37\045\uff37\075\uff37\104\uff37\117\uff37\120\uff37\123\uff37" +
    "\127\uff37\164\uff37\165\uff37\167\uff37\001\002\000\006\003" +
    "\123\051\124\001\002\000\004\051\122\001\002\000\046" +
    "\002\uff3e\003\uff3e\010\uff3e\012\uff3e\014\uff3e\016\uff3e\021" +
    "\uff3e\022\uff3e\045\uff3e\075\uff3e\104\uff3e\117\uff3e\120\uff3e" +
    "\123\uff3e\127\uff3e\164\uff3e\165\uff3e\167\uff3e\001\002\000" +
    "\046\002\uff36\003\uff36\010\uff36\012\uff36\014\uff36\016\uff36" +
    "\021\uff36\022\uff36\045\uff36\075\uff36\104\uff36\117\uff36\120" +
    "\uff36\123\uff36\127\uff36\164\uff36\165\uff36\167\uff36\001\002" +
    "\000\046\002\uff35\003\uff35\010\uff35\012\uff35\014\uff35\016" +
    "\uff35\021\uff35\022\uff35\045\uff35\075\uff35\104\uff35\117\uff35" +
    "\120\uff35\123\uff35\127\uff35\164\uff35\165\uff35\167\uff35\001" +
    "\002\000\046\002\uff41\003\uff41\010\uff41\012\uff41\014\uff41" +
    "\016\uff41\021\uff41\022\uff41\045\uff41\075\uff41\104\uff41\117" +
    "\uff41\120\uff41\123\uff41\127\uff41\164\uff41\165\uff41\167\uff41" +
    "\001\002\000\046\002\uff3f\003\uff3f\010\uff3f\012\uff3f\014" +
    "\uff3f\016\uff3f\021\uff3f\022\uff3f\045\uff3f\075\uff3f\104\uff3f" +
    "\117\uff3f\120\uff3f\123\uff3f\127\uff3f\164\uff3f\165\uff3f\167" +
    "\uff3f\001\002\000\006\012\130\051\132\001\002\000\006" +
    "\012\130\051\132\001\002\000\006\003\334\104\333\001" +
    "\002\000\014\003\313\051\314\104\263\107\264\163\266" +
    "\001\002\000\010\104\263\107\264\163\266\001\002\000" +
    "\006\003\134\043\135\001\002\000\004\044\256\001\002" +
    "\000\006\003\136\044\137\001\002\000\036\003\062\012" +
    "\072\014\052\016\067\045\254\075\057\104\053\117\063" +
    "\120\046\123\055\127\044\164\054\165\061\167\047\001" +
    "\002\000\036\003\141\012\072\014\052\016\067\045\142" +
    "\075\057\104\053\117\063\120\046\123\055\127\044\164" +
    "\054\165\061\167\047\001\002\000\036\003\245\012\072" +
    "\014\052\016\067\045\246\075\057\104\053\117\063\120" +
    "\046\123\055\127\044\164\054\165\061\167\047\001\002" +
    "\000\050\002\uff5c\003\uff5c\010\uff5c\012\uff5c\014\uff5c\016" +
    "\uff5c\021\uff5c\022\uff5c\042\143\045\uff5c\075\uff5c\104\uff5c" +
    "\117\uff5c\120\uff5c\123\uff5c\127\uff5c\164\uff5c\165\uff5c\167" +
    "\uff5c\001\002\000\046\002\uff60\003\uff60\010\uff60\012\uff60" +
    "\014\uff60\016\uff60\021\uff60\022\uff60\045\uff60\075\uff60\104" +
    "\uff60\117\uff60\120\uff60\123\uff60\127\uff60\164\uff60\165\uff60" +
    "\167\uff60\001\002\000\004\106\144\001\002\000\004\043" +
    "\145\001\002\000\004\053\146\001\002\000\032\003\156" +
    "\115\153\125\155\130\164\131\162\132\151\133\161\137" +
    "\154\142\150\160\163\161\152\166\160\001\002\000\006" +
    "\003\214\042\215\001\002\000\006\003\uff8c\042\uff8c\001" +
    "\002\000\006\003\uff90\042\uff90\001\002\000\006\003\uff8e" +
    "\042\uff8e\001\002\000\006\003\uff91\042\uff91\001\002\000" +
    "\006\003\uff96\042\uff96\001\002\000\006\003\uff8d\042\uff8d" +
    "\001\002\000\004\042\205\001\002\000\046\002\uffb2\003" +
    "\uffb2\010\uffb2\012\uffb2\014\uffb2\016\uffb2\021\uffb2\022\uffb2" +
    "\045\uffb2\075\uffb2\104\uffb2\117\uffb2\120\uffb2\123\uffb2\127" +
    "\uffb2\164\uffb2\165\uffb2\167\uffb2\001\002\000\006\003\uff95" +
    "\042\uff95\001\002\000\006\003\uff92\042\uff92\001\002\000" +
    "\006\003\uff94\042\uff94\001\002\000\006\003\uff8f\042\uff8f" +
    "\001\002\000\006\003\uff93\042\uff93\001\002\000\006\003" +
    "\200\042\201\001\002\000\006\003\167\042\170\001\002" +
    "\000\004\106\176\001\002\000\006\003\172\106\171\001" +
    "\002\000\006\003\174\043\175\001\002\000\004\043\173" +
    "\001\002\000\046\002\uffa1\003\uffa1\010\uffa1\012\uffa1\014" +
    "\uffa1\016\uffa1\021\uffa1\022\uffa1\045\uffa1\075\uffa1\104\uffa1" +
    "\117\uffa1\120\uffa1\123\uffa1\127\uffa1\164\uffa1\165\uffa1\167" +
    "\uffa1\001\002\000\046\002\uffa0\003\uffa0\010\uffa0\012\uffa0" +
    "\014\uffa0\016\uffa0\021\uffa0\022\uffa0\045\uffa0\075\uffa0\104" +
    "\uffa0\117\uffa0\120\uffa0\123\uffa0\127\uffa0\164\uffa0\165\uffa0" +
    "\167\uffa0\001\002\000\046\002\uffa6\003\uffa6\010\uffa6\012" +
    "\uffa6\014\uffa6\016\uffa6\021\uffa6\022\uffa6\045\uffa6\075\uffa6" +
    "\104\uffa6\117\uffa6\120\uffa6\123\uffa6\127\uffa6\164\uffa6\165" +
    "\uffa6\167\uffa6\001\002\000\004\043\177\001\002\000\046" +
    "\002\uffa2\003\uffa2\010\uffa2\012\uffa2\014\uffa2\016\uffa2\021" +
    "\uffa2\022\uffa2\045\uffa2\075\uffa2\104\uffa2\117\uffa2\120\uffa2" +
    "\123\uffa2\127\uffa2\164\uffa2\165\uffa2\167\uffa2\001\002\000" +
    "\004\043\204\001\002\000\006\003\202\043\203\001\002" +
    "\000\046\002\uff97\003\uff97\010\uff97\012\uff97\014\uff97\016" +
    "\uff97\021\uff97\022\uff97\045\uff97\075\uff97\104\uff97\117\uff97" +
    "\120\uff97\123\uff97\127\uff97\164\uff97\165\uff97\167\uff97\001" +
    "\002\000\046\002\uffa4\003\uffa4\010\uffa4\012\uffa4\014\uffa4" +
    "\016\uffa4\021\uffa4\022\uffa4\045\uffa4\075\uffa4\104\uffa4\117" +
    "\uffa4\120\uffa4\123\uffa4\127\uffa4\164\uffa4\165\uffa4\167\uffa4" +
    "\001\002\000\046\002\uff98\003\uff98\010\uff98\012\uff98\014" +
    "\uff98\016\uff98\021\uff98\022\uff98\045\uff98\075\uff98\104\uff98" +
    "\117\uff98\120\uff98\123\uff98\127\uff98\164\uff98\165\uff98\167" +
    "\uff98\001\002\000\006\043\207\106\206\001\002\000\006" +
    "\043\211\110\210\001\002\000\046\002\uff99\003\uff99\010" +
    "\uff99\012\uff99\014\uff99\016\uff99\021\uff99\022\uff99\045\uff99" +
    "\075\uff99\104\uff99\117\uff99\120\uff99\123\uff99\127\uff99\164" +
    "\uff99\165\uff99\167\uff99\001\002\000\004\106\212\001\002" +
    "\000\046\002\uffa3\003\uffa3\010\uffa3\012\uffa3\014\uffa3\016" +
    "\uffa3\021\uffa3\022\uffa3\045\uffa3\075\uffa3\104\uffa3\117\uffa3" +
    "\120\uffa3\123\uffa3\127\uffa3\164\uffa3\165\uffa3\167\uffa3\001" +
    "\002\000\004\043\213\001\002\000\046\002\uff9f\003\uff9f" +
    "\010\uff9f\012\uff9f\014\uff9f\016\uff9f\021\uff9f\022\uff9f\045" +
    "\uff9f\075\uff9f\104\uff9f\117\uff9f\120\uff9f\123\uff9f\127\uff9f" +
    "\164\uff9f\165\uff9f\167\uff9f\001\002\000\004\106\234\001" +
    "\002\000\006\003\217\106\216\001\002\000\006\003\224" +
    "\110\223\001\002\000\004\110\220\001\002\000\004\106" +
    "\221\001\002\000\004\043\222\001\002\000\046\002\uff9d" +
    "\003\uff9d\010\uff9d\012\uff9d\014\uff9d\016\uff9d\021\uff9d\022" +
    "\uff9d\045\uff9d\075\uff9d\104\uff9d\117\uff9d\120\uff9d\123\uff9d" +
    "\127\uff9d\164\uff9d\165\uff9d\167\uff9d\001\002\000\006\003" +
    "\230\106\227\001\002\000\004\106\225\001\002\000\004" +
    "\043\226\001\002\000\046\002\uff9c\003\uff9c\010\uff9c\012" +
    "\uff9c\014\uff9c\016\uff9c\021\uff9c\022\uff9c\045\uff9c\075\uff9c" +
    "\104\uff9c\117\uff9c\120\uff9c\123\uff9c\127\uff9c\164\uff9c\165" +
    "\uff9c\167\uff9c\001\002\000\006\003\232\043\233\001\002" +
    "\000\004\043\231\001\002\000\046\002\uff9b\003\uff9b\010" +
    "\uff9b\012\uff9b\014\uff9b\016\uff9b\021\uff9b\022\uff9b\045\uff9b" +
    "\075\uff9b\104\uff9b\117\uff9b\120\uff9b\123\uff9b\127\uff9b\164" +
    "\uff9b\165\uff9b\167\uff9b\001\002\000\046\002\uff9a\003\uff9a" +
    "\010\uff9a\012\uff9a\014\uff9a\016\uff9a\021\uff9a\022\uff9a\045" +
    "\uff9a\075\uff9a\104\uff9a\117\uff9a\120\uff9a\123\uff9a\127\uff9a" +
    "\164\uff9a\165\uff9a\167\uff9a\001\002\000\046\002\uffa5\003" +
    "\uffa5\010\uffa5\012\uffa5\014\uffa5\016\uffa5\021\uffa5\022\uffa5" +
    "\045\uffa5\075\uffa5\104\uffa5\117\uffa5\120\uffa5\123\uffa5\127" +
    "\uffa5\164\uffa5\165\uffa5\167\uffa5\001\002\000\004\110\235" +
    "\001\002\000\004\106\236\001\002\000\004\043\237\001" +
    "\002\000\046\002\uff9e\003\uff9e\010\uff9e\012\uff9e\014\uff9e" +
    "\016\uff9e\021\uff9e\022\uff9e\045\uff9e\075\uff9e\104\uff9e\117" +
    "\uff9e\120\uff9e\123\uff9e\127\uff9e\164\uff9e\165\uff9e\167\uff9e" +
    "\001\002\000\046\002\uffc7\003\uffc7\010\uffc7\012\uffc7\014" +
    "\uffc7\016\uffc7\021\uffc7\022\uffc7\045\uffc7\075\uffc7\104\uffc7" +
    "\117\uffc7\120\uffc7\123\uffc7\127\uffc7\164\uffc7\165\uffc7\167" +
    "\uffc7\001\002\000\046\002\uffc9\003\uffc9\010\uffc9\012\uffc9" +
    "\014\uffc9\016\uffc9\021\uffc9\022\uffc9\045\uffc9\075\uffc9\104" +
    "\uffc9\117\uffc9\120\uffc9\123\uffc9\127\uffc9\164\uffc9\165\uffc9" +
    "\167\uffc9\001\002\000\046\002\uffbb\003\uffbb\010\uffbb\012" +
    "\uffbb\014\uffbb\016\uffbb\021\uffbb\022\uffbb\045\uffbb\075\uffbb" +
    "\104\uffbb\117\uffbb\120\uffbb\123\uffbb\127\uffbb\164\uffbb\165" +
    "\uffbb\167\uffbb\001\002\000\046\002\uffbf\003\uffbf\010\uffbf" +
    "\012\uffbf\014\uffbf\016\uffbf\021\uffbf\022\uffbf\045\uffbf\075" +
    "\uffbf\104\uffbf\117\uffbf\120\uffbf\123\uffbf\127\uffbf\164\uffbf" +
    "\165\uffbf\167\uffbf\001\002\000\046\002\uffbd\003\uffbd\010" +
    "\uffbd\012\uffbd\014\uffbd\016\uffbd\021\uffbd\022\uffbd\045\uffbd" +
    "\075\uffbd\104\uffbd\117\uffbd\120\uffbd\123\uffbd\127\uffbd\164" +
    "\uffbd\165\uffbd\167\uffbd\001\002\000\050\002\uff58\003\uff58" +
    "\010\uff58\012\uff58\014\uff58\016\uff58\021\uff58\022\uff58\042" +
    "\143\045\uff58\075\uff58\104\uff58\117\uff58\120\uff58\123\uff58" +
    "\127\uff58\164\uff58\165\uff58\167\uff58\001\002\000\046\002" +
    "\uff61\003\uff61\010\uff61\012\uff61\014\uff61\016\uff61\021\uff61" +
    "\022\uff61\045\uff61\075\uff61\104\uff61\117\uff61\120\uff61\123" +
    "\uff61\127\uff61\164\uff61\165\uff61\167\uff61\001\002\000\046" +
    "\002\uffb9\003\uffb9\010\uffb9\012\uffb9\014\uffb9\016\uffb9\021" +
    "\uffb9\022\uffb9\045\uffb9\075\uffb9\104\uffb9\117\uffb9\120\uffb9" +
    "\123\uffb9\127\uffb9\164\uffb9\165\uffb9\167\uffb9\001\002\000" +
    "\046\002\uffc1\003\uffc1\010\uffc1\012\uffc1\014\uffc1\016\uffc1" +
    "\021\uffc1\022\uffc1\045\uffc1\075\uffc1\104\uffc1\117\uffc1\120" +
    "\uffc1\123\uffc1\127\uffc1\164\uffc1\165\uffc1\167\uffc1\001\002" +
    "\000\046\002\uffc3\003\uffc3\010\uffc3\012\uffc3\014\uffc3\016" +
    "\uffc3\021\uffc3\022\uffc3\045\uffc3\075\uffc3\104\uffc3\117\uffc3" +
    "\120\uffc3\123\uffc3\127\uffc3\164\uffc3\165\uffc3\167\uffc3\001" +
    "\002\000\046\002\uffc5\003\uffc5\010\uffc5\012\uffc5\014\uffc5" +
    "\016\uffc5\021\uffc5\022\uffc5\045\uffc5\075\uffc5\104\uffc5\117" +
    "\uffc5\120\uffc5\123\uffc5\127\uffc5\164\uffc5\165\uffc5\167\uffc5" +
    "\001\002\000\036\003\062\012\072\014\052\016\067\045" +
    "\255\075\057\104\053\117\063\120\046\123\055\127\044" +
    "\164\054\165\061\167\047\001\002\000\046\002\uff5d\003" +
    "\uff5d\010\uff5d\012\uff5d\014\uff5d\016\uff5d\021\uff5d\022\uff5d" +
    "\045\uff5d\075\uff5d\104\uff5d\117\uff5d\120\uff5d\123\uff5d\127" +
    "\uff5d\164\uff5d\165\uff5d\167\uff5d\001\002\000\046\002\uff59" +
    "\003\uff59\010\uff59\012\uff59\014\uff59\016\uff59\021\uff59\022" +
    "\uff59\045\uff59\075\uff59\104\uff59\117\uff59\120\uff59\123\uff59" +
    "\127\uff59\164\uff59\165\uff59\167\uff59\001\002\000\036\003" +
    "\062\012\072\014\052\016\067\045\260\075\057\104\053" +
    "\117\063\120\046\123\055\127\044\164\054\165\061\167" +
    "\047\001\002\000\036\003\062\012\072\014\052\016\067" +
    "\045\261\075\057\104\053\117\063\120\046\123\055\127" +
    "\044\164\054\165\061\167\047\001\002\000\046\002\uff5e" +
    "\003\uff5e\010\uff5e\012\uff5e\014\uff5e\016\uff5e\021\uff5e\022" +
    "\uff5e\045\uff5e\075\uff5e\104\uff5e\117\uff5e\120\uff5e\123\uff5e" +
    "\127\uff5e\164\uff5e\165\uff5e\167\uff5e\001\002\000\046\002" +
    "\uff5a\003\uff5a\010\uff5a\012\uff5a\014\uff5a\016\uff5a\021\uff5a" +
    "\022\uff5a\045\uff5a\075\uff5a\104\uff5a\117\uff5a\120\uff5a\123" +
    "\uff5a\127\uff5a\164\uff5a\165\uff5a\167\uff5a\001\002\000\004" +
    "\051\302\001\002\000\026\003\uff45\051\uff45\062\uff45\063" +
    "\uff45\064\uff45\065\uff45\066\uff45\067\uff45\070\uff45\104\uff45" +
    "\001\002\000\030\003\uff44\051\uff44\062\uff44\063\uff44\064" +
    "\uff44\065\uff44\066\uff44\067\uff44\070\uff44\104\uff44\163\301" +
    "\001\002\000\026\003\uff4a\051\uff4a\062\273\063\271\064" +
    "\275\065\270\066\272\067\276\070\274\104\uff4a\001\002" +
    "\000\004\107\267\001\002\000\026\003\uff42\051\uff42\062" +
    "\uff42\063\uff42\064\uff42\065\uff42\066\uff42\067\uff42\070\uff42" +
    "\104\uff42\001\002\000\010\104\uff23\107\uff23\163\uff23\001" +
    "\002\000\010\104\uff25\107\uff25\163\uff25\001\002\000\010" +
    "\104\uff22\107\uff22\163\uff22\001\002\000\010\104\uff26\107" +
    "\uff26\163\uff26\001\002\000\010\104\uff20\107\uff20\163\uff20" +
    "\001\002\000\010\104\uff24\107\uff24\163\uff24\001\002\000" +
    "\010\104\uff21\107\uff21\163\uff21\001\002\000\010\104\263" +
    "\107\264\163\266\001\002\000\010\003\uff4b\051\uff4b\104" +
    "\uff4b\001\002\000\026\003\uff43\051\uff43\062\uff43\063\uff43" +
    "\064\uff43\065\uff43\066\uff43\067\uff43\070\uff43\104\uff43\001" +
    "\002\000\006\003\304\104\303\001\002\000\010\003\310" +
    "\102\311\103\307\001\002\000\004\102\306\001\002\000" +
    "\006\003\uff53\043\uff53\001\002\000\006\003\uff47\043\uff47" +
    "\001\002\000\006\003\uff49\043\uff49\001\002\000\006\003" +
    "\uff46\043\uff46\001\002\000\006\003\uff48\043\uff48\001\002" +
    "\000\004\051\331\001\002\000\010\104\263\107\264\163" +
    "\266\001\002\000\012\051\316\104\263\107\264\163\266" +
    "\001\002\000\010\003\320\051\321\104\303\001\002\000" +
    "\006\003\304\104\303\001\002\000\006\003\uff51\043\uff51" +
    "\001\002\000\010\003\304\102\306\104\303\001\002\000" +
    "\006\003\323\104\303\001\002\000\006\003\uff50\043\uff50" +
    "\001\002\000\010\003\uff54\043\uff54\102\306\001\002\000" +
    "\006\003\uff57\043\uff57\001\002\000\006\003\uff55\043\uff55" +
    "\001\002\000\004\051\327\001\002\000\006\003\304\104" +
    "\303\001\002\000\006\003\uff56\043\uff56\001\002\000\006" +
    "\003\304\104\303\001\002\000\006\003\uff52\043\uff52\001" +
    "\002\000\006\003\340\075\337\001\002\000\004\075\335" +
    "\001\002\000\004\107\336\001\002\000\014\003\uff4e\051" +
    "\uff4e\104\uff4e\107\uff4e\163\uff4e\001\002\000\006\107\342" +
    "\163\343\001\002\000\004\107\341\001\002\000\014\003" +
    "\uff4d\051\uff4d\104\uff4d\107\uff4d\163\uff4d\001\002\000\014" +
    "\003\uff4f\051\uff4f\104\uff4f\107\uff4f\163\uff4f\001\002\000" +
    "\014\003\uff4c\051\uff4c\104\uff4c\107\uff4c\163\uff4c\001\002" +
    "\000\004\043\345\001\002\000\004\044\346\001\002\000" +
    "\036\003\062\012\072\014\052\016\067\045\350\075\057" +
    "\104\053\117\063\120\046\123\055\127\044\164\054\165" +
    "\061\167\047\001\002\000\036\003\062\012\072\014\052" +
    "\016\067\045\351\075\057\104\053\117\063\120\046\123" +
    "\055\127\044\164\054\165\061\167\047\001\002\000\046" +
    "\002\uff5f\003\uff5f\010\uff5f\012\uff5f\014\uff5f\016\uff5f\021" +
    "\uff5f\022\uff5f\045\uff5f\075\uff5f\104\uff5f\117\uff5f\120\uff5f" +
    "\123\uff5f\127\uff5f\164\uff5f\165\uff5f\167\uff5f\001\002\000" +
    "\046\002\uff5b\003\uff5b\010\uff5b\012\uff5b\014\uff5b\016\uff5b" +
    "\021\uff5b\022\uff5b\045\uff5b\075\uff5b\104\uff5b\117\uff5b\120" +
    "\uff5b\123\uff5b\127\uff5b\164\uff5b\165\uff5b\167\uff5b\001\002" +
    "\000\036\003\062\012\072\014\052\016\067\045\354\075" +
    "\057\104\053\117\063\120\046\123\055\127\044\164\054" +
    "\165\061\167\047\001\002\000\036\003\062\012\072\014" +
    "\052\016\067\045\355\075\057\104\053\117\063\120\046" +
    "\123\055\127\044\164\054\165\061\167\047\001\002\000" +
    "\046\002\uff68\003\uff68\010\uff68\012\uff68\014\uff68\016\uff68" +
    "\021\uff68\022\uff68\045\uff68\075\uff68\104\uff68\117\uff68\120" +
    "\uff68\123\uff68\127\uff68\164\uff68\165\uff68\167\uff68\001\002" +
    "\000\046\002\uff69\003\uff69\010\uff69\012\uff69\014\uff69\016" +
    "\uff69\021\uff69\022\uff69\045\uff69\075\uff69\104\uff69\117\uff69" +
    "\120\uff69\123\uff69\127\uff69\164\uff69\165\uff69\167\uff69\001" +
    "\002\000\004\051\357\001\002\000\046\002\uff39\003\uff39" +
    "\010\uff39\012\uff39\014\uff39\016\uff39\021\uff39\022\uff39\045" +
    "\uff39\075\uff39\104\uff39\117\uff39\120\uff39\123\uff39\127\uff39" +
    "\164\uff39\165\uff39\167\uff39\001\002\000\004\106\u016f\001" +
    "\002\000\010\003\363\043\364\106\362\001\002\000\006" +
    "\003\u0108\110\u0107\001\002\000\004\110\365\001\002\000" +
    "\046\002\uff7e\003\uff7e\010\uff7e\012\uff7e\014\uff7e\016\uff7e" +
    "\021\uff7e\022\uff7e\045\uff7e\075\uff7e\104\uff7e\117\uff7e\120" +
    "\uff7e\123\uff7e\127\uff7e\164\uff7e\165\uff7e\167\uff7e\001\002" +
    "\000\004\046\366\001\002\000\006\003\370\106\367\001" +
    "\002\000\010\003\uff6d\047\uff6d\110\u0104\001\002\000\006" +
    "\003\uff6b\047\uff6b\001\002\000\004\047\372\001\002\000" +
    "\004\110\373\001\002\000\004\046\374\001\002\000\006" +
    "\003\370\106\367\001\002\000\004\047\376\001\002\000" +
    "\004\110\377\001\002\000\004\046\u0100\001\002\000\006" +
    "\003\370\106\367\001\002\000\004\047\u0102\001\002\000" +
    "\004\043\u0103\001\002\000\046\002\uff7b\003\uff7b\010\uff7b" +
    "\012\uff7b\014\uff7b\016\uff7b\021\uff7b\022\uff7b\045\uff7b\075" +
    "\uff7b\104\uff7b\117\uff7b\120\uff7b\123\uff7b\127\uff7b\164\uff7b" +
    "\165\uff7b\167\uff7b\001\002\000\006\003\370\106\367\001" +
    "\002\000\006\003\uff6a\047\uff6a\001\002\000\006\003\uff6c" +
    "\047\uff6c\001\002\000\006\003\u0115\046\u0116\001\002\000" +
    "\004\046\u0109\001\002\000\006\003\370\106\367\001\002" +
    "\000\004\047\u010b\001\002\000\004\110\u010c\001\002\000" +
    "\004\046\u010d\001\002\000\006\003\370\106\367\001\002" +
    "\000\004\047\u010f\001\002\000\004\110\u0110\001\002\000" +
    "\004\046\u0111\001\002\000\006\003\370\106\367\001\002" +
    "\000\004\047\u0113\001\002\000\004\043\u0114\001\002\000" +
    "\046\002\uff7a\003\uff7a\010\uff7a\012\uff7a\014\uff7a\016\uff7a" +
    "\021\uff7a\022\uff7a\045\uff7a\075\uff7a\104\uff7a\117\uff7a\120" +
    "\uff7a\123\uff7a\127\uff7a\164\uff7a\165\uff7a\167\uff7a\001\002" +
    "\000\006\003\370\106\367\001\002\000\006\003\u0117\106" +
    "\367\001\002\000\006\003\uff6b\047\u015a\001\002\000\006" +
    "\003\u0119\047\u011a\001\002\000\004\110\u0151\001\002\000" +
    "\006\003\u011c\110\u011b\001\002\000\006\003\u0125\046\u0126" +
    "\001\002\000\004\046\u011d\001\002\000\006\003\370\106" +
    "\367\001\002\000\004\047\u011f\001\002\000\004\110\u0120" +
    "\001\002\000\004\046\u0121\001\002\000\006\003\370\106" +
    "\367\001\002\000\004\047\u0123\001\002\000\004\043\u0124" +
    "\001\002\000\046\002\uff76\003\uff76\010\uff76\012\uff76\014" +
    "\uff76\016\uff76\021\uff76\022\uff76\045\uff76\075\uff76\104\uff76" +
    "\117\uff76\120\uff76\123\uff76\127\uff76\164\uff76\165\uff76\167" +
    "\uff76\001\002\000\006\003\370\106\367\001\002\000\006" +
    "\003\u0127\106\367\001\002\000\006\003\uff6b\047\u0144\001" +
    "\002\000\006\003\u0129\047\u012a\001\002\000\004\110\u013f" +
    "\001\002\000\006\003\u012c\110\u012b\001\002\000\006\003" +
    "\u0131\046\u0132\001\002\000\004\046\u012d\001\002\000\006" +
    "\003\370\106\367\001\002\000\004\047\u012f\001\002\000" +
    "\004\043\u0130\001\002\000\046\002\uff72\003\uff72\010\uff72" +
    "\012\uff72\014\uff72\016\uff72\021\uff72\022\uff72\045\uff72\075" +
    "\uff72\104\uff72\117\uff72\120\uff72\123\uff72\127\uff72\164\uff72" +
    "\165\uff72\167\uff72\001\002\000\006\003\370\106\367\001" +
    "\002\000\006\003\u0133\106\367\001\002\000\006\003\uff6b" +
    "\047\u013a\001\002\000\006\003\u0135\047\u0136\001\002\000" +
    "\004\043\u0139\001\002\000\006\003\u0137\043\u0138\001\002" +
    "\000\046\002\uff6e\003\uff6e\010\uff6e\012\uff6e\014\uff6e\016" +
    "\uff6e\021\uff6e\022\uff6e\045\uff6e\075\uff6e\104\uff6e\117\uff6e" +
    "\120\uff6e\123\uff6e\127\uff6e\164\uff6e\165\uff6e\167\uff6e\001" +
    "\002\000\046\002\uff7d\003\uff7d\010\uff7d\012\uff7d\014\uff7d" +
    "\016\uff7d\021\uff7d\022\uff7d\045\uff7d\075\uff7d\104\uff7d\117" +
    "\uff7d\120\uff7d\123\uff7d\127\uff7d\164\uff7d\165\uff7d\167\uff7d" +
    "\001\002\000\046\002\uff6f\003\uff6f\010\uff6f\012\uff6f\014" +
    "\uff6f\016\uff6f\021\uff6f\022\uff6f\045\uff6f\075\uff6f\104\uff6f" +
    "\117\uff6f\120\uff6f\123\uff6f\127\uff6f\164\uff6f\165\uff6f\167" +
    "\uff6f\001\002\000\004\043\u013b\001\002\000\046\002\uff70" +
    "\003\uff70\010\uff70\012\uff70\014\uff70\016\uff70\021\uff70\022" +
    "\uff70\045\uff70\075\uff70\104\uff70\117\uff70\120\uff70\123\uff70" +
    "\127\uff70\164\uff70\165\uff70\167\uff70\001\002\000\004\047" +
    "\u013d\001\002\000\004\043\u013e\001\002\000\046\002\uff71" +
    "\003\uff71\010\uff71\012\uff71\014\uff71\016\uff71\021\uff71\022" +
    "\uff71\045\uff71\075\uff71\104\uff71\117\uff71\120\uff71\123\uff71" +
    "\127\uff71\164\uff71\165\uff71\167\uff71\001\002\000\004\046" +
    "\u0140\001\002\000\006\003\370\106\367\001\002\000\004" +
    "\047\u0142\001\002\000\004\043\u0143\001\002\000\046\002" +
    "\uff73\003\uff73\010\uff73\012\uff73\014\uff73\016\uff73\021\uff73" +
    "\022\uff73\045\uff73\075\uff73\104\uff73\117\uff73\120\uff73\123" +
    "\uff73\127\uff73\164\uff73\165\uff73\167\uff73\001\002\000\004" +
    "\110\u0145\001\002\000\004\046\u0146\001\002\000\006\003" +
    "\370\106\367\001\002\000\004\047\u0148\001\002\000\004" +
    "\043\u0149\001\002\000\046\002\uff74\003\uff74\010\uff74\012" +
    "\uff74\014\uff74\016\uff74\021\uff74\022\uff74\045\uff74\075\uff74" +
    "\104\uff74\117\uff74\120\uff74\123\uff74\127\uff74\164\uff74\165" +
    "\uff74\167\uff74\001\002\000\004\047\u014b\001\002\000\004" +
    "\110\u014c\001\002\000\004\046\u014d\001\002\000\006\003" +
    "\370\106\367\001\002\000\004\047\u014f\001\002\000\004" +
    "\043\u0150\001\002\000\046\002\uff75\003\uff75\010\uff75\012" +
    "\uff75\014\uff75\016\uff75\021\uff75\022\uff75\045\uff75\075\uff75" +
    "\104\uff75\117\uff75\120\uff75\123\uff75\127\uff75\164\uff75\165" +
    "\uff75\167\uff75\001\002\000\004\046\u0152\001\002\000\006" +
    "\003\370\106\367\001\002\000\004\047\u0154\001\002\000" +
    "\004\110\u0155\001\002\000\004\046\u0156\001\002\000\006" +
    "\003\370\106\367\001\002\000\004\047\u0158\001\002\000" +
    "\004\043\u0159\001\002\000\046\002\uff77\003\uff77\010\uff77" +
    "\012\uff77\014\uff77\016\uff77\021\uff77\022\uff77\045\uff77\075" +
    "\uff77\104\uff77\117\uff77\120\uff77\123\uff77\127\uff77\164\uff77" +
    "\165\uff77\167\uff77\001\002\000\004\110\u015b\001\002\000" +
    "\004\046\u015c\001\002\000\006\003\370\106\367\001\002" +
    "\000\004\047\u015e\001\002\000\004\110\u015f\001\002\000" +
    "\004\046\u0160\001\002\000\006\003\370\106\367\001\002" +
    "\000\004\047\u0162\001\002\000\004\043\u0163\001\002\000" +
    "\046\002\uff78\003\uff78\010\uff78\012\uff78\014\uff78\016\uff78" +
    "\021\uff78\022\uff78\045\uff78\075\uff78\104\uff78\117\uff78\120" +
    "\uff78\123\uff78\127\uff78\164\uff78\165\uff78\167\uff78\001\002" +
    "\000\004\047\u0165\001\002\000\004\110\u0166\001\002\000" +
    "\004\046\u0167\001\002\000\006\003\370\106\367\001\002" +
    "\000\004\047\u0169\001\002\000\004\110\u016a\001\002\000" +
    "\004\046\u016b\001\002\000\006\003\370\106\367\001\002" +
    "\000\004\047\u016d\001\002\000\004\043\u016e\001\002\000" +
    "\046\002\uff79\003\uff79\010\uff79\012\uff79\014\uff79\016\uff79" +
    "\021\uff79\022\uff79\045\uff79\075\uff79\104\uff79\117\uff79\120" +
    "\uff79\123\uff79\127\uff79\164\uff79\165\uff79\167\uff79\001\002" +
    "\000\004\110\u0170\001\002\000\004\046\u0171\001\002\000" +
    "\006\003\370\106\367\001\002\000\004\047\u0173\001\002" +
    "\000\004\110\u0174\001\002\000\004\046\u0175\001\002\000" +
    "\006\003\370\106\367\001\002\000\004\047\u0177\001\002" +
    "\000\004\110\u0178\001\002\000\004\046\u0179\001\002\000" +
    "\006\003\370\106\367\001\002\000\004\047\u017b\001\002" +
    "\000\004\043\u017c\001\002\000\046\002\uff7c\003\uff7c\010" +
    "\uff7c\012\uff7c\014\uff7c\016\uff7c\021\uff7c\022\uff7c\045\uff7c" +
    "\075\uff7c\104\uff7c\117\uff7c\120\uff7c\123\uff7c\127\uff7c\164" +
    "\uff7c\165\uff7c\167\uff7c\001\002\000\004\051\u019c\001\002" +
    "\000\016\003\u0197\051\u0198\104\100\106\102\107\077\163" +
    "\103\001\002\000\014\075\u0190\104\u018e\106\102\107\077" +
    "\163\103\001\002\000\010\003\u0182\043\u0184\104\u0181\001" +
    "\002\000\016\003\ufef3\042\ufef3\043\ufef3\044\ufef3\104\u0188" +
    "\110\u0189\001\002\000\004\043\u0187\001\002\000\006\003" +
    "\u0185\043\u0186\001\002\000\046\002\uff8a\003\uff8a\010\uff8a" +
    "\012\uff8a\014\uff8a\016\uff8a\021\uff8a\022\uff8a\045\uff8a\075" +
    "\uff8a\104\uff8a\117\uff8a\120\uff8a\123\uff8a\127\uff8a\164\uff8a" +
    "\165\uff8a\167\uff8a\001\002\000\046\002\uff87\003\uff87\010" +
    "\uff87\012\uff87\014\uff87\016\uff87\021\uff87\022\uff87\045\uff87" +
    "\075\uff87\104\uff87\117\uff87\120\uff87\123\uff87\127\uff87\164" +
    "\uff87\165\uff87\167\uff87\001\002\000\046\002\uff8b\003\uff8b" +
    "\010\uff8b\012\uff8b\014\uff8b\016\uff8b\021\uff8b\022\uff8b\045" +
    "\uff8b\075\uff8b\104\uff8b\117\uff8b\120\uff8b\123\uff8b\127\uff8b" +
    "\164\uff8b\165\uff8b\167\uff8b\001\002\000\046\002\uff88\003" +
    "\uff88\010\uff88\012\uff88\014\uff88\016\uff88\021\uff88\022\uff88" +
    "\045\uff88\075\uff88\104\uff88\117\uff88\120\uff88\123\uff88\127" +
    "\uff88\164\uff88\165\uff88\167\uff88\001\002\000\004\104\u0181" +
    "\001\002\000\014\003\ufeee\042\ufeee\043\ufeee\044\ufeee\104" +
    "\u018b\001\002\000\012\003\ufef2\042\ufef2\043\ufef2\044\ufef2" +
    "\001\002\000\014\003\ufef1\042\ufef1\043\ufef1\044\ufef1\104" +
    "\u0181\001\002\000\012\003\ufef0\042\ufef0\043\ufef0\044\ufef0" +
    "\001\002\000\012\003\ufeef\042\ufeef\043\ufeef\044\ufeef\001" +
    "\002\000\012\043\ufef3\051\uff2f\104\u0188\110\u0189\001\002" +
    "\000\004\051\u0195\001\002\000\012\104\100\106\102\107" +
    "\077\163\103\001\002\000\004\043\u0192\001\002\000\046" +
    "\002\uff89\003\uff89\010\uff89\012\uff89\014\uff89\016\uff89\021" +
    "\uff89\022\uff89\045\uff89\075\uff89\104\uff89\117\uff89\120\uff89" +
    "\123\uff89\127\uff89\164\uff89\165\uff89\167\uff89\001\002\000" +
    "\004\051\u0194\001\002\000\046\002\uff34\003\uff34\010\uff34" +
    "\012\uff34\014\uff34\016\uff34\021\uff34\022\uff34\045\uff34\075" +
    "\uff34\104\uff34\117\uff34\120\uff34\123\uff34\127\uff34\164\uff34" +
    "\165\uff34\167\uff34\001\002\000\046\002\uff31\003\uff31\010" +
    "\uff31\012\uff31\014\uff31\016\uff31\021\uff31\022\uff31\045\uff31" +
    "\075\uff31\104\uff31\117\uff31\120\uff31\123\uff31\127\uff31\164" +
    "\uff31\165\uff31\167\uff31\001\002\000\006\003\u019a\051\u019b" +
    "\001\002\000\004\051\u0199\001\002\000\046\002\uff3a\003" +
    "\uff3a\010\uff3a\012\uff3a\014\uff3a\016\uff3a\021\uff3a\022\uff3a" +
    "\045\uff3a\075\uff3a\104\uff3a\117\uff3a\120\uff3a\123\uff3a\127" +
    "\uff3a\164\uff3a\165\uff3a\167\uff3a\001\002\000\046\002\uff33" +
    "\003\uff33\010\uff33\012\uff33\014\uff33\016\uff33\021\uff33\022" +
    "\uff33\045\uff33\075\uff33\104\uff33\117\uff33\120\uff33\123\uff33" +
    "\127\uff33\164\uff33\165\uff33\167\uff33\001\002\000\046\002" +
    "\uff32\003\uff32\010\uff32\012\uff32\014\uff32\016\uff32\021\uff32" +
    "\022\uff32\045\uff32\075\uff32\104\uff32\117\uff32\120\uff32\123" +
    "\uff32\127\uff32\164\uff32\165\uff32\167\uff32\001\002\000\046" +
    "\002\uff40\003\uff40\010\uff40\012\uff40\014\uff40\016\uff40\021" +
    "\uff40\022\uff40\045\uff40\075\uff40\104\uff40\117\uff40\120\uff40" +
    "\123\uff40\127\uff40\164\uff40\165\uff40\167\uff40\001\002\000" +
    "\046\002\uff3b\003\uff3b\010\uff3b\012\uff3b\014\uff3b\016\uff3b" +
    "\021\uff3b\022\uff3b\045\uff3b\075\uff3b\104\uff3b\117\uff3b\120" +
    "\uff3b\123\uff3b\127\uff3b\164\uff3b\165\uff3b\167\uff3b\001\002" +
    "\000\012\003\u01bd\042\u01bf\043\u01be\104\u0181\001\002\000" +
    "\006\042\u01ac\104\u0181\001\002\000\006\043\u01a1\104\u0181" +
    "\001\002\000\004\043\u01a6\001\002\000\004\044\u01a2\001" +
    "\002\000\036\003\062\012\072\014\052\016\067\045\u01a4" +
    "\075\057\104\053\117\063\120\046\123\055\127\044\164" +
    "\054\165\061\167\047\001\002\000\036\003\062\012\072" +
    "\014\052\016\067\045\u01a5\075\057\104\053\117\063\120" +
    "\046\123\055\127\044\164\054\165\061\167\047\001\002" +
    "\000\046\002\ufef8\003\ufef8\010\ufef8\012\ufef8\014\ufef8\016" +
    "\ufef8\021\ufef8\022\ufef8\045\ufef8\075\ufef8\104\ufef8\117\ufef8" +
    "\120\ufef8\123\ufef8\127\ufef8\164\ufef8\165\ufef8\167\ufef8\001" +
    "\002\000\046\002\uff0c\003\uff0c\010\uff0c\012\uff0c\014\uff0c" +
    "\016\uff0c\021\uff0c\022\uff0c\045\uff0c\075\uff0c\104\uff0c\117" +
    "\uff0c\120\uff0c\123\uff0c\127\uff0c\164\uff0c\165\uff0c\167\uff0c" +
    "\001\002\000\004\044\u01a7\001\002\000\036\003\062\012" +
    "\072\014\052\016\067\045\u01a9\075\057\104\053\117\063" +
    "\120\046\123\055\127\044\164\054\165\061\167\047\001" +
    "\002\000\036\003\062\012\072\014\052\016\067\045\u01aa" +
    "\075\057\104\053\117\063\120\046\123\055\127\044\164" +
    "\054\165\061\167\047\001\002\000\046\002\uff02\003\uff02" +
    "\010\uff02\012\uff02\014\uff02\016\uff02\021\uff02\022\uff02\045" +
    "\uff02\075\uff02\104\uff02\117\uff02\120\uff02\123\uff02\127\uff02" +
    "\164\uff02\165\uff02\167\uff02\001\002\000\046\002\uff16\003" +
    "\uff16\010\uff16\012\uff16\014\uff16\016\uff16\021\uff16\022\uff16" +
    "\045\uff16\075\uff16\104\uff16\117\uff16\120\uff16\123\uff16\127" +
    "\uff16\164\uff16\165\uff16\167\uff16\001\002\000\004\043\u01b8" +
    "\001\002\000\006\043\u01ae\104\u0181\001\002\000\004\043" +
    "\u01b3\001\002\000\004\044\u01af\001\002\000\036\003\062" +
    "\012\072\014\052\016\067\045\u01b1\075\057\104\053\117" +
    "\063\120\046\123\055\127\044\164\054\165\061\167\047" +
    "\001\002\000\036\003\062\012\072\014\052\016\067\045" +
    "\u01b2\075\057\104\053\117\063\120\046\123\055\127\044" +
    "\164\054\165\061\167\047\001\002\000\046\002\ufefd\003" +
    "\ufefd\010\ufefd\012\ufefd\014\ufefd\016\ufefd\021\ufefd\022\ufefd" +
    "\045\ufefd\075\ufefd\104\ufefd\117\ufefd\120\ufefd\123\ufefd\127" +
    "\ufefd\164\ufefd\165\ufefd\167\ufefd\001\002\000\046\002\uff11" +
    "\003\uff11\010\uff11\012\uff11\014\uff11\016\uff11\021\uff11\022" +
    "\uff11\045\uff11\075\uff11\104\uff11\117\uff11\120\uff11\123\uff11" +
    "\127\uff11\164\uff11\165\uff11\167\uff11\001\002\000\004\044" +
    "\u01b4\001\002\000\036\003\062\012\072\014\052\016\067" +
    "\045\u01b6\075\057\104\053\117\063\120\046\123\055\127" +
    "\044\164\054\165\061\167\047\001\002\000\036\003\062" +
    "\012\072\014\052\016\067\045\u01b7\075\057\104\053\117" +
    "\063\120\046\123\055\127\044\164\054\165\061\167\047" +
    "\001\002\000\046\002\uff07\003\uff07\010\uff07\012\uff07\014" +
    "\uff07\016\uff07\021\uff07\022\uff07\045\uff07\075\uff07\104\uff07" +
    "\117\uff07\120\uff07\123\uff07\127\uff07\164\uff07\165\uff07\167" +
    "\uff07\001\002\000\046\002\uff1b\003\uff1b\010\uff1b\012\uff1b" +
    "\014\uff1b\016\uff1b\021\uff1b\022\uff1b\045\uff1b\075\uff1b\104" +
    "\uff1b\117\uff1b\120\uff1b\123\uff1b\127\uff1b\164\uff1b\165\uff1b" +
    "\167\uff1b\001\002\000\004\044\u01b9\001\002\000\034\003" +
    "\062\012\072\014\052\016\067\075\057\104\053\117\063" +
    "\120\046\123\055\127\044\164\054\165\061\167\047\001" +
    "\002\000\036\003\062\012\072\014\052\016\067\045\u01bb" +
    "\075\057\104\053\117\063\120\046\123\055\127\044\164" +
    "\054\165\061\167\047\001\002\000\046\002\uff15\003\uff15" +
    "\010\uff15\012\uff15\014\uff15\016\uff15\021\uff15\022\uff15\045" +
    "\uff15\075\uff15\104\uff15\117\uff15\120\uff15\123\uff15\127\uff15" +
    "\164\uff15\165\uff15\167\uff15\001\002\000\004\043\u020a\001" +
    "\002\000\006\043\u0200\104\u0181\001\002\000\004\044\u01fb" +
    "\001\002\000\014\003\u01c0\042\u01c3\043\u01c2\044\u01c4\104" +
    "\u0181\001\002\000\004\044\u01f7\001\002\000\012\003\u01da" +
    "\042\u01dc\043\u01db\044\u01dd\001\002\000\036\003\u01d1\012" +
    "\072\014\052\016\067\044\u01d2\075\057\104\053\117\063" +
    "\120\046\123\055\127\044\164\054\165\061\167\047\001" +
    "\002\000\006\003\u01c8\044\u01c9\001\002\000\036\003\062" +
    "\012\072\014\052\016\067\045\u01c6\075\057\104\053\117" +
    "\063\120\046\123\055\127\044\164\054\165\061\167\047" +
    "\001\002\000\036\003\062\012\072\014\052\016\067\045" +
    "\u01c7\075\057\104\053\117\063\120\046\123\055\127\044" +
    "\164\054\165\061\167\047\001\002\000\046\002\ufef6\003" +
    "\ufef6\010\ufef6\012\ufef6\014\ufef6\016\ufef6\021\ufef6\022\ufef6" +
    "\045\ufef6\075\ufef6\104\ufef6\117\ufef6\120\ufef6\123\ufef6\127" +
    "\ufef6\164\ufef6\165\ufef6\167\ufef6\001\002\000\046\002\uff0a" +
    "\003\uff0a\010\uff0a\012\uff0a\014\uff0a\016\uff0a\021\uff0a\022" +
    "\uff0a\045\uff0a\075\uff0a\104\uff0a\117\uff0a\120\uff0a\123\uff0a" +
    "\127\uff0a\164\uff0a\165\uff0a\167\uff0a\001\002\000\036\003" +
    "\062\012\072\014\052\016\067\045\u01ce\075\057\104\053" +
    "\117\063\120\046\123\055\127\044\164\054\165\061\167" +
    "\047\001\002\000\034\003\u01cb\012\072\014\052\016\067" +
    "\075\057\104\053\117\063\120\046\123\055\127\044\164" +
    "\054\165\061\167\047\001\002\000\034\003\u01cc\012\072" +
    "\014\052\016\067\075\057\104\053\117\063\120\046\123" +
    "\055\127\044\164\054\165\061\167\047\001\002\000\050" +
    "\002\ufef9\003\ufef9\010\ufef9\012\ufef9\014\ufef9\016\ufef9\021" +
    "\ufef9\022\ufef9\042\143\045\ufef9\075\ufef9\104\ufef9\117\ufef9" +
    "\120\ufef9\123\ufef9\127\ufef9\164\ufef9\165\ufef9\167\ufef9\001" +
    "\002\000\050\002\uff0d\003\uff0d\010\uff0d\012\uff0d\014\uff0d" +
    "\016\uff0d\021\uff0d\022\uff0d\042\143\045\uff0d\075\uff0d\104" +
    "\uff0d\117\uff0d\120\uff0d\123\uff0d\127\uff0d\164\uff0d\165\uff0d" +
    "\167\uff0d\001\002\000\036\003\062\012\072\014\052\016" +
    "\067\045\u01cf\075\057\104\053\117\063\120\046\123\055" +
    "\127\044\164\054\165\061\167\047\001\002\000\046\002" +
    "\ufefa\003\ufefa\010\ufefa\012\ufefa\014\ufefa\016\ufefa\021\ufefa" +
    "\022\ufefa\045\ufefa\075\ufefa\104\ufefa\117\ufefa\120\ufefa\123" +
    "\ufefa\127\ufefa\164\ufefa\165\ufefa\167\ufefa\001\002\000\046" +
    "\002\uff0e\003\uff0e\010\uff0e\012\uff0e\014\uff0e\016\uff0e\021" +
    "\uff0e\022\uff0e\045\uff0e\075\uff0e\104\uff0e\117\uff0e\120\uff0e" +
    "\123\uff0e\127\uff0e\164\uff0e\165\uff0e\167\uff0e\001\002\000" +
    "\036\003\062\012\072\014\052\016\067\045\u01d9\075\057" +
    "\104\053\117\063\120\046\123\055\127\044\164\054\165" +
    "\061\167\047\001\002\000\006\042\143\045\u01d8\001\002" +
    "\000\036\003\u01d4\012\072\014\052\016\067\045\u01d5\075" +
    "\057\104\053\117\063\120\046\123\055\127\044\164\054" +
    "\165\061\167\047\001\002\000\036\003\u01d6\012\072\014" +
    "\052\016\067\045\u01d7\075\057\104\053\117\063\120\046" +
    "\123\055\127\044\164\054\165\061\167\047\001\002\000" +
    "\050\002\ufef4\003\ufef4\010\ufef4\012\ufef4\014\ufef4\016\ufef4" +
    "\021\ufef4\022\ufef4\042\143\045\ufef4\075\ufef4\104\ufef4\117" +
    "\ufef4\120\ufef4\123\ufef4\127\ufef4\164\ufef4\165\ufef4\167\ufef4" +
    "\001\002\000\046\002\uff1e\003\uff1e\010\uff1e\012\uff1e\014" +
    "\uff1e\016\uff1e\021\uff1e\022\uff1e\045\uff1e\075\uff1e\104\uff1e" +
    "\117\uff1e\120\uff1e\123\uff1e\127\uff1e\164\uff1e\165\uff1e\167" +
    "\uff1e\001\002\000\050\002\uff08\003\uff08\010\uff08\012\uff08" +
    "\014\uff08\016\uff08\021\uff08\022\uff08\042\143\045\uff08\075" +
    "\uff08\104\uff08\117\uff08\120\uff08\123\uff08\127\uff08\164\uff08" +
    "\165\uff08\167\uff08\001\002\000\046\002\uff1d\003\uff1d\010" +
    "\uff1d\012\uff1d\014\uff1d\016\uff1d\021\uff1d\022\uff1d\045\uff1d" +
    "\075\uff1d\104\uff1d\117\uff1d\120\uff1d\123\uff1d\127\uff1d\164" +
    "\uff1d\165\uff1d\167\uff1d\001\002\000\046\002\ufef5\003\ufef5" +
    "\010\ufef5\012\ufef5\014\ufef5\016\ufef5\021\ufef5\022\ufef5\045" +
    "\ufef5\075\ufef5\104\ufef5\117\ufef5\120\ufef5\123\ufef5\127\ufef5" +
    "\164\ufef5\165\ufef5\167\ufef5\001\002\000\046\002\uff09\003" +
    "\uff09\010\uff09\012\uff09\014\uff09\016\uff09\021\uff09\022\uff09" +
    "\045\uff09\075\uff09\104\uff09\117\uff09\120\uff09\123\uff09\127" +
    "\uff09\164\uff09\165\uff09\167\uff09\001\002\000\004\044\u01f3" +
    "\001\002\000\010\003\u01e9\044\u01eb\045\u01ea\001\002\000" +
    "\006\003\u01e1\044\u01e2\001\002\000\036\003\062\012\072" +
    "\014\052\016\067\045\u01df\075\057\104\053\117\063\120" +
    "\046\123\055\127\044\164\054\165\061\167\047\001\002" +
    "\000\036\003\062\012\072\014\052\016\067\045\u01e0\075" +
    "\057\104\053\117\063\120\046\123\055\127\044\164\054" +
    "\165\061\167\047\001\002\000\046\002\uff00\003\uff00\010" +
    "\uff00\012\uff00\014\uff00\016\uff00\021\uff00\022\uff00\045\uff00" +
    "\075\uff00\104\uff00\117\uff00\120\uff00\123\uff00\127\uff00\164" +
    "\uff00\165\uff00\167\uff00\001\002\000\046\002\uff14\003\uff14" +
    "\010\uff14\012\uff14\014\uff14\016\uff14\021\uff14\022\uff14\045" +
    "\uff14\075\uff14\104\uff14\117\uff14\120\uff14\123\uff14\127\uff14" +
    "\164\uff14\165\uff14\167\uff14\001\002\000\036\003\062\012" +
    "\072\014\052\016\067\045\u01e7\075\057\104\053\117\063" +
    "\120\046\123\055\127\044\164\054\165\061\167\047\001" +
    "\002\000\034\003\u01e4\012\072\014\052\016\067\075\057" +
    "\104\053\117\063\120\046\123\055\127\044\164\054\165" +
    "\061\167\047\001\002\000\034\003\u01e5\012\072\014\052" +
    "\016\067\075\057\104\053\117\063\120\046\123\055\127" +
    "\044\164\054\165\061\167\047\001\002\000\050\002\uff03" +
    "\003\uff03\010\uff03\012\uff03\014\uff03\016\uff03\021\uff03\022" +
    "\uff03\042\143\045\uff03\075\uff03\104\uff03\117\uff03\120\uff03" +
    "\123\uff03\127\uff03\164\uff03\165\uff03\167\uff03\001\002\000" +
    "\050\002\uff17\003\uff17\010\uff17\012\uff17\014\uff17\016\uff17" +
    "\021\uff17\022\uff17\042\143\045\uff17\075\uff17\104\uff17\117" +
    "\uff17\120\uff17\123\uff17\127\uff17\164\uff17\165\uff17\167\uff17" +
    "\001\002\000\036\003\062\012\072\014\052\016\067\045" +
    "\u01e8\075\057\104\053\117\063\120\046\123\055\127\044" +
    "\164\054\165\061\167\047\001\002\000\046\002\uff04\003" +
    "\uff04\010\uff04\012\uff04\014\uff04\016\uff04\021\uff04\022\uff04" +
    "\045\uff04\075\uff04\104\uff04\117\uff04\120\uff04\123\uff04\127" +
    "\uff04\164\uff04\165\uff04\167\uff04\001\002\000\046\002\uff18" +
    "\003\uff18\010\uff18\012\uff18\014\uff18\016\uff18\021\uff18\022" +
    "\uff18\045\uff18\075\uff18\104\uff18\117\uff18\120\uff18\123\uff18" +
    "\127\uff18\164\uff18\165\uff18\167\uff18\001\002\000\034\003" +
    "\062\012\072\014\052\016\067\075\057\104\053\117\063" +
    "\120\046\123\055\127\044\164\054\165\061\167\047\001" +
    "\002\000\046\002\ufeff\003\ufeff\010\ufeff\012\ufeff\014\ufeff" +
    "\016\ufeff\021\ufeff\022\ufeff\045\ufeff\075\ufeff\104\ufeff\117" +
    "\ufeff\120\ufeff\123\ufeff\127\ufeff\164\ufeff\165\ufeff\167\ufeff" +
    "\001\002\000\036\003\u01ed\012\072\014\052\016\067\045" +
    "\u01ee\075\057\104\053\117\063\120\046\123\055\127\044" +
    "\164\054\165\061\167\047\001\002\000\036\003\u01ef\012" +
    "\072\014\052\016\067\045\u01f0\075\057\104\053\117\063" +
    "\120\046\123\055\127\044\164\054\165\061\167\047\001" +
    "\002\000\050\002\ufefe\003\ufefe\010\ufefe\012\ufefe\014\ufefe" +
    "\016\ufefe\021\ufefe\022\ufefe\042\143\045\ufefe\075\ufefe\104" +
    "\ufefe\117\ufefe\120\ufefe\123\ufefe\127\ufefe\164\ufefe\165\ufefe" +
    "\167\ufefe\001\002\000\046\002\uff1c\003\uff1c\010\uff1c\012" +
    "\uff1c\014\uff1c\016\uff1c\021\uff1c\022\uff1c\045\uff1c\075\uff1c" +
    "\104\uff1c\117\uff1c\120\uff1c\123\uff1c\127\uff1c\164\uff1c\165" +
    "\uff1c\167\uff1c\001\002\000\050\002\uff12\003\uff12\010\uff12" +
    "\012\uff12\014\uff12\016\uff12\021\uff12\022\uff12\042\143\045" +
    "\uff12\075\uff12\104\uff12\117\uff12\120\uff12\123\uff12\127\uff12" +
    "\164\uff12\165\uff12\167\uff12\001\002\000\046\002\uff1f\003" +
    "\uff1f\010\uff1f\012\uff1f\014\uff1f\016\uff1f\021\uff1f\022\uff1f" +
    "\045\uff1f\075\uff1f\104\uff1f\117\uff1f\120\uff1f\123\uff1f\127" +
    "\uff1f\164\uff1f\165\uff1f\167\uff1f\001\002\000\036\003\062" +
    "\012\072\014\052\016\067\045\u01f2\075\057\104\053\117" +
    "\063\120\046\123\055\127\044\164\054\165\061\167\047" +
    "\001\002\000\046\002\uff13\003\uff13\010\uff13\012\uff13\014" +
    "\uff13\016\uff13\021\uff13\022\uff13\045\uff13\075\uff13\104\uff13" +
    "\117\uff13\120\uff13\123\uff13\127\uff13\164\uff13\165\uff13\167" +
    "\uff13\001\002\000\036\003\062\012\072\014\052\016\067" +
    "\045\u01f5\075\057\104\053\117\063\120\046\123\055\127" +
    "\044\164\054\165\061\167\047\001\002\000\036\003\062" +
    "\012\072\014\052\016\067\045\u01f6\075\057\104\053\117" +
    "\063\120\046\123\055\127\044\164\054\165\061\167\047" +
    "\001\002\000\046\002\uff05\003\uff05\010\uff05\012\uff05\014" +
    "\uff05\016\uff05\021\uff05\022\uff05\045\uff05\075\uff05\104\uff05" +
    "\117\uff05\120\uff05\123\uff05\127\uff05\164\uff05\165\uff05\167" +
    "\uff05\001\002\000\046\002\uff19\003\uff19\010\uff19\012\uff19" +
    "\014\uff19\016\uff19\021\uff19\022\uff19\045\uff19\075\uff19\104" +
    "\uff19\117\uff19\120\uff19\123\uff19\127\uff19\164\uff19\165\uff19" +
    "\167\uff19\001\002\000\036\003\062\012\072\014\052\016" +
    "\067\045\u01f9\075\057\104\053\117\063\120\046\123\055" +
    "\127\044\164\054\165\061\167\047\001\002\000\036\003" +
    "\062\012\072\014\052\016\067\045\u01fa\075\057\104\053" +
    "\117\063\120\046\123\055\127\044\164\054\165\061\167" +
    "\047\001\002\000\046\002\ufefb\003\ufefb\010\ufefb\012\ufefb" +
    "\014\ufefb\016\ufefb\021\ufefb\022\ufefb\045\ufefb\075\ufefb\104" +
    "\ufefb\117\ufefb\120\ufefb\123\ufefb\127\ufefb\164\ufefb\165\ufefb" +
    "\167\ufefb\001\002\000\046\002\uff0f\003\uff0f\010\uff0f\012" +
    "\uff0f\014\uff0f\016\uff0f\021\uff0f\022\uff0f\045\uff0f\075\uff0f" +
    "\104\uff0f\117\uff0f\120\uff0f\123\uff0f\127\uff0f\164\uff0f\165" +
    "\uff0f\167\uff0f\001\002\000\036\003\062\012\072\014\052" +
    "\016\067\045\u01fd\075\057\104\053\117\063\120\046\123" +
    "\055\127\044\164\054\165\061\167\047\001\002\000\036" +
    "\003\062\012\072\014\052\016\067\045\u01fe\075\057\104" +
    "\053\117\063\120\046\123\055\127\044\164\054\165\061" +
    "\167\047\001\002\000\046\002\ufef7\003\ufef7\010\ufef7\012" +
    "\ufef7\014\ufef7\016\ufef7\021\ufef7\022\ufef7\045\ufef7\075\ufef7" +
    "\104\ufef7\117\ufef7\120\ufef7\123\ufef7\127\ufef7\164\ufef7\165" +
    "\ufef7\167\ufef7\001\002\000\046\002\uff0b\003\uff0b\010\uff0b" +
    "\012\uff0b\014\uff0b\016\uff0b\021\uff0b\022\uff0b\045\uff0b\075" +
    "\uff0b\104\uff0b\117\uff0b\120\uff0b\123\uff0b\127\uff0b\164\uff0b" +
    "\165\uff0b\167\uff0b\001\002\000\004\043\u0205\001\002\000" +
    "\004\044\u0201\001\002\000\036\003\062\012\072\014\052" +
    "\016\067\045\u0203\075\057\104\053\117\063\120\046\123" +
    "\055\127\044\164\054\165\061\167\047\001\002\000\036" +
    "\003\062\012\072\014\052\016\067\045\u0204\075\057\104" +
    "\053\117\063\120\046\123\055\127\044\164\054\165\061" +
    "\167\047\001\002\000\046\002\ufefc\003\ufefc\010\ufefc\012" +
    "\ufefc\014\ufefc\016\ufefc\021\ufefc\022\ufefc\045\ufefc\075\ufefc" +
    "\104\ufefc\117\ufefc\120\ufefc\123\ufefc\127\ufefc\164\ufefc\165" +
    "\ufefc\167\ufefc\001\002\000\046\002\uff10\003\uff10\010\uff10" +
    "\012\uff10\014\uff10\016\uff10\021\uff10\022\uff10\045\uff10\075" +
    "\uff10\104\uff10\117\uff10\120\uff10\123\uff10\127\uff10\164\uff10" +
    "\165\uff10\167\uff10\001\002\000\004\044\u0206\001\002\000" +
    "\036\003\062\012\072\014\052\016\067\045\u0208\075\057" +
    "\104\053\117\063\120\046\123\055\127\044\164\054\165" +
    "\061\167\047\001\002\000\036\003\062\012\072\014\052" +
    "\016\067\045\u0209\075\057\104\053\117\063\120\046\123" +
    "\055\127\044\164\054\165\061\167\047\001\002\000\046" +
    "\002\uff06\003\uff06\010\uff06\012\uff06\014\uff06\016\uff06\021" +
    "\uff06\022\uff06\045\uff06\075\uff06\104\uff06\117\uff06\120\uff06" +
    "\123\uff06\127\uff06\164\uff06\165\uff06\167\uff06\001\002\000" +
    "\046\002\uff1a\003\uff1a\010\uff1a\012\uff1a\014\uff1a\016\uff1a" +
    "\021\uff1a\022\uff1a\045\uff1a\075\uff1a\104\uff1a\117\uff1a\120" +
    "\uff1a\123\uff1a\127\uff1a\164\uff1a\165\uff1a\167\uff1a\001\002" +
    "\000\004\044\u020b\001\002\000\004\045\u020c\001\002\000" +
    "\046\002\uff01\003\uff01\010\uff01\012\uff01\014\uff01\016\uff01" +
    "\021\uff01\022\uff01\045\uff01\075\uff01\104\uff01\117\uff01\120" +
    "\uff01\123\uff01\127\uff01\164\uff01\165\uff01\167\uff01\001\002" +
    "\000\004\106\u022a\001\002\000\006\003\u0210\106\u020f\001" +
    "\002\000\006\003\u0217\110\u0216\001\002\000\004\110\u0211" +
    "\001\002\000\004\046\u0212\001\002\000\006\003\370\106" +
    "\367\001\002\000\004\047\u0214\001\002\000\004\043\u0215" +
    "\001\002\000\046\002\uff84\003\uff84\010\uff84\012\uff84\014" +
    "\uff84\016\uff84\021\uff84\022\uff84\045\uff84\075\uff84\104\uff84" +
    "\117\uff84\120\uff84\123\uff84\127\uff84\164\uff84\165\uff84\167" +
    "\uff84\001\002\000\006\003\u021c\046\u021d\001\002\000\004" +
    "\046\u0218\001\002\000\006\003\370\106\367\001\002\000" +
    "\004\047\u021a\001\002\000\004\043\u021b\001\002\000\046" +
    "\002\uff83\003\uff83\010\uff83\012\uff83\014\uff83\016\uff83\021" +
    "\uff83\022\uff83\045\uff83\075\uff83\104\uff83\117\uff83\120\uff83" +
    "\123\uff83\127\uff83\164\uff83\165\uff83\167\uff83\001\002\000" +
    "\006\003\370\106\367\001\002\000\006\003\u021e\106\367" +
    "\001\002\000\006\003\uff6b\047\u0225\001\002\000\006\003" +
    "\u0220\047\u0221\001\002\000\004\043\u0224\001\002\000\006" +
    "\003\u0222\043\u0223\001\002\000\046\002\uff7f\003\uff7f\010" +
    "\uff7f\012\uff7f\014\uff7f\016\uff7f\021\uff7f\022\uff7f\045\uff7f" +
    "\075\uff7f\104\uff7f\117\uff7f\120\uff7f\123\uff7f\127\uff7f\164" +
    "\uff7f\165\uff7f\167\uff7f\001\002\000\046\002\uff86\003\uff86" +
    "\010\uff86\012\uff86\014\uff86\016\uff86\021\uff86\022\uff86\045" +
    "\uff86\075\uff86\104\uff86\117\uff86\120\uff86\123\uff86\127\uff86" +
    "\164\uff86\165\uff86\167\uff86\001\002\000\046\002\uff80\003" +
    "\uff80\010\uff80\012\uff80\014\uff80\016\uff80\021\uff80\022\uff80" +
    "\045\uff80\075\uff80\104\uff80\117\uff80\120\uff80\123\uff80\127" +
    "\uff80\164\uff80\165\uff80\167\uff80\001\002\000\004\043\u0226" +
    "\001\002\000\046\002\uff81\003\uff81\010\uff81\012\uff81\014" +
    "\uff81\016\uff81\021\uff81\022\uff81\045\uff81\075\uff81\104\uff81" +
    "\117\uff81\120\uff81\123\uff81\127\uff81\164\uff81\165\uff81\167" +
    "\uff81\001\002\000\004\047\u0228\001\002\000\004\043\u0229" +
    "\001\002\000\046\002\uff82\003\uff82\010\uff82\012\uff82\014" +
    "\uff82\016\uff82\021\uff82\022\uff82\045\uff82\075\uff82\104\uff82" +
    "\117\uff82\120\uff82\123\uff82\127\uff82\164\uff82\165\uff82\167" +
    "\uff82\001\002\000\004\110\u022b\001\002\000\004\046\u022c" +
    "\001\002\000\006\003\370\106\367\001\002\000\004\047" +
    "\u022e\001\002\000\004\043\u022f\001\002\000\046\002\uff85" +
    "\003\uff85\010\uff85\012\uff85\014\uff85\016\uff85\021\uff85\022" +
    "\uff85\045\uff85\075\uff85\104\uff85\117\uff85\120\uff85\123\uff85" +
    "\127\uff85\164\uff85\165\uff85\167\uff85\001\002\000\014\002" +
    "\uffeb\010\uffeb\021\uffeb\022\uffeb\045\uffeb\001\002\000\012" +
    "\104\100\106\102\107\077\163\103\001\002\000\014\003" +
    "\u0234\104\100\106\102\107\077\163\103\001\002\000\006" +
    "\003\u0236\043\u0237\001\002\000\004\043\u0235\001\002\000" +
    "\046\002\uffb6\003\uffb6\010\uffb6\012\uffb6\014\uffb6\016\uffb6" +
    "\021\uffb6\022\uffb6\045\uffb6\075\uffb6\104\uffb6\117\uffb6\120" +
    "\uffb6\123\uffb6\127\uffb6\164\uffb6\165\uffb6\167\uffb6\001\002" +
    "\000\046\002\uffb5\003\uffb5\010\uffb5\012\uffb5\014\uffb5\016" +
    "\uffb5\021\uffb5\022\uffb5\045\uffb5\075\uffb5\104\uffb5\117\uffb5" +
    "\120\uffb5\123\uffb5\127\uffb5\164\uffb5\165\uffb5\167\uffb5\001" +
    "\002\000\046\002\uffb8\003\uffb8\010\uffb8\012\uffb8\014\uffb8" +
    "\016\uffb8\021\uffb8\022\uffb8\045\uffb8\075\uffb8\104\uffb8\117" +
    "\uffb8\120\uffb8\123\uffb8\127\uffb8\164\uffb8\165\uffb8\167\uffb8" +
    "\001\002\000\004\043\u0239\001\002\000\046\002\uffb7\003" +
    "\uffb7\010\uffb7\012\uffb7\014\uffb7\016\uffb7\021\uffb7\022\uffb7" +
    "\045\uffb7\075\uffb7\104\uffb7\117\uffb7\120\uffb7\123\uffb7\127" +
    "\uffb7\164\uffb7\165\uffb7\167\uffb7\001\002\000\004\106\u024a" +
    "\001\002\000\006\003\u023d\106\u023c\001\002\000\006\003" +
    "\u0241\043\u0242\001\002\000\004\043\u023e\001\002\000\050" +
    "\002\uffab\003\uffab\010\uffab\012\uffab\014\uffab\016\uffab\021" +
    "\uffab\022\uffab\045\uffab\053\u023f\075\uffab\104\uffab\117\uffab" +
    "\120\uffab\123\uffab\127\uffab\164\uffab\165\uffab\167\uffab\001" +
    "\002\000\032\003\156\115\153\125\155\130\164\131\162" +
    "\132\151\133\161\137\154\142\150\160\163\161\152\166" +
    "\160\001\002\000\046\002\uffb0\003\uffb0\010\uffb0\012\uffb0" +
    "\014\uffb0\016\uffb0\021\uffb0\022\uffb0\045\uffb0\075\uffb0\104" +
    "\uffb0\117\uffb0\120\uffb0\123\uffb0\127\uffb0\164\uffb0\165\uffb0" +
    "\167\uffb0\001\002\000\050\002\uffaa\003\uffaa\010\uffaa\012" +
    "\uffaa\014\uffaa\016\uffaa\021\uffaa\022\uffaa\045\uffaa\053\u0248" +
    "\075\uffaa\104\uffaa\117\uffaa\120\uffaa\123\uffaa\127\uffaa\164" +
    "\uffaa\165\uffaa\167\uffaa\001\002\000\050\002\uffb3\003\uffb3" +
    "\010\uffb3\012\uffb3\014\uffb3\016\uffb3\021\uffb3\022\uffb3\045" +
    "\uffb3\053\u0243\075\uffb3\104\uffb3\117\uffb3\120\uffb3\123\uffb3" +
    "\127\uffb3\164\uffb3\165\uffb3\167\uffb3\001\002\000\032\003" +
    "\u0246\115\153\125\155\130\164\131\162\132\151\133\161" +
    "\137\154\142\150\160\163\161\152\166\160\001\002\000" +
    "\032\003\156\115\153\125\155\130\164\131\162\132\151" +
    "\133\161\137\154\142\150\160\163\161\152\166\160\001" +
    "\002\000\046\002\uffae\003\uffae\010\uffae\012\uffae\014\uffae" +
    "\016\uffae\021\uffae\022\uffae\045\uffae\075\uffae\104\uffae\117" +
    "\uffae\120\uffae\123\uffae\127\uffae\164\uffae\165\uffae\167\uffae" +
    "\001\002\000\050\002\uffad\003\uffad\010\uffad\012\uffad\014" +
    "\uffad\016\uffad\021\uffad\022\uffad\042\205\045\uffad\075\uffad" +
    "\104\uffad\117\uffad\120\uffad\123\uffad\127\uffad\164\uffad\165" +
    "\uffad\167\uffad\001\002\000\046\002\uffb4\003\uffb4\010\uffb4" +
    "\012\uffb4\014\uffb4\016\uffb4\021\uffb4\022\uffb4\045\uffb4\075" +
    "\uffb4\104\uffb4\117\uffb4\120\uffb4\123\uffb4\127\uffb4\164\uffb4" +
    "\165\uffb4\167\uffb4\001\002\000\032\003\156\115\153\125" +
    "\155\130\164\131\162\132\151\133\161\137\154\142\150" +
    "\160\163\161\152\166\160\001\002\000\046\002\uffaf\003" +
    "\uffaf\010\uffaf\012\uffaf\014\uffaf\016\uffaf\021\uffaf\022\uffaf" +
    "\045\uffaf\075\uffaf\104\uffaf\117\uffaf\120\uffaf\123\uffaf\127" +
    "\uffaf\164\uffaf\165\uffaf\167\uffaf\001\002\000\004\043\u024b" +
    "\001\002\000\050\002\uffac\003\uffac\010\uffac\012\uffac\014" +
    "\uffac\016\uffac\021\uffac\022\uffac\045\uffac\053\u024c\075\uffac" +
    "\104\uffac\117\uffac\120\uffac\123\uffac\127\uffac\164\uffac\165" +
    "\uffac\167\uffac\001\002\000\032\003\156\115\153\125\155" +
    "\130\164\131\162\132\151\133\161\137\154\142\150\160" +
    "\163\161\152\166\160\001\002\000\046\002\uffb1\003\uffb1" +
    "\010\uffb1\012\uffb1\014\uffb1\016\uffb1\021\uffb1\022\uffb1\045" +
    "\uffb1\075\uffb1\104\uffb1\117\uffb1\120\uffb1\123\uffb1\127\uffb1" +
    "\164\uffb1\165\uffb1\167\uffb1\001\002\000\036\003\062\012" +
    "\072\014\052\016\067\045\u0254\075\057\104\053\117\063" +
    "\120\046\123\055\127\044\164\054\165\061\167\047\001" +
    "\002\000\014\002\uffee\010\uffee\021\uffee\022\uffee\045\uffee" +
    "\001\002\000\046\002\uffed\003\062\010\uffed\012\072\014" +
    "\052\016\067\021\uffed\022\uffed\045\u0252\075\057\104\053" +
    "\117\063\120\046\123\055\127\044\164\054\165\061\167" +
    "\047\001\002\000\046\002\uffea\003\062\010\uffea\012\072" +
    "\014\052\016\067\021\uffea\022\uffea\045\u0253\075\057\104" +
    "\053\117\063\120\046\123\055\127\044\164\054\165\061" +
    "\167\047\001\002\000\014\002\uffef\010\uffef\021\uffef\022" +
    "\uffef\045\uffef\001\002\000\014\002\ufff0\010\ufff0\021\ufff0" +
    "\022\ufff0\045\ufff0\001\002\000\014\002\uffe9\010\uffe9\021" +
    "\uffe9\022\uffe9\045\uffe9\001\002\000\006\003\u0268\042\u0269" +
    "\001\002\000\010\002\ufff5\021\ufff5\045\ufff5\001\002\000" +
    "\014\002\ufff2\010\u0255\021\ufff2\022\u0259\045\ufff2\001\002" +
    "\000\014\002\ufff4\010\u0255\021\ufff4\022\u0259\045\ufff4\001" +
    "\002\000\006\003\u025b\104\u025a\001\002\000\006\003\u025f" +
    "\044\u0260\001\002\000\004\044\u025c\001\002\000\034\003" +
    "\062\012\072\014\052\016\067\075\057\104\053\117\063" +
    "\120\046\123\055\127\044\164\054\165\061\167\047\001" +
    "\002\000\036\003\062\012\072\014\052\016\067\045\u025e" +
    "\075\057\104\053\117\063\120\046\123\055\127\044\164" +
    "\054\165\061\167\047\001\002\000\014\002\uffe7\010\uffe7" +
    "\021\uffe7\022\uffe7\045\uffe7\001\002\000\034\003\062\012" +
    "\072\014\052\016\067\075\057\104\053\117\063\120\046" +
    "\123\055\127\044\164\054\165\061\167\047\001\002\000" +
    "\034\003\062\012\072\014\052\016\067\075\057\104\053" +
    "\117\063\120\046\123\055\127\044\164\054\165\061\167" +
    "\047\001\002\000\036\003\u0262\012\072\014\052\016\067" +
    "\045\u0263\075\057\104\053\117\063\120\046\123\055\127" +
    "\044\164\054\165\061\167\047\001\002\000\016\002\uffe6" +
    "\010\uffe6\021\uffe6\022\uffe6\042\143\045\uffe6\001\002\000" +
    "\014\002\uffe8\010\uffe8\021\uffe8\022\uffe8\045\uffe8\001\002" +
    "\000\036\003\062\012\072\014\052\016\067\045\u0265\075" +
    "\057\104\053\117\063\120\046\123\055\127\044\164\054" +
    "\165\061\167\047\001\002\000\014\002\uffe5\010\uffe5\021" +
    "\uffe5\022\uffe5\045\uffe5\001\002\000\010\002\ufff3\021\ufff3" +
    "\045\ufff3\001\002\000\010\002\ufff1\021\ufff1\045\ufff1\001" +
    "\002\000\006\104\u026a\106\u026b\001\002\000\010\003\u026d" +
    "\104\u026a\106\u026b\001\002\000\006\003\uffdc\110\uffdc\001" +
    "\002\000\006\003\uffdd\110\uffdd\001\002\000\006\003\u028d" +
    "\110\u028c\001\002\000\004\110\u026e\001\002\000\004\046" +
    "\u026f\001\002\000\010\047\uffd6\052\u0271\106\u0270\001\002" +
    "\000\012\052\u027e\104\u0276\106\u0277\107\u0275\001\002\000" +
    "\010\104\u0276\106\u0277\107\u0275\001\002\000\004\047\u0273" +
    "\001\002\000\004\043\u0274\001\002\000\014\002\uffe2\010" +
    "\uffe2\021\uffe2\022\uffe2\045\uffe2\001\002\000\014\003\uffcf" +
    "\047\uffcf\071\u027b\106\uffcf\110\uffcf\001\002\000\012\003" +
    "\uffce\047\uffce\106\uffce\110\uffce\001\002\000\014\003\uffcd" +
    "\047\uffcd\071\u0279\106\uffcd\110\uffcd\001\002\000\006\003" +
    "\uffd9\047\uffd9\001\002\000\004\107\u027a\001\002\000\012" +
    "\003\uffcb\047\uffcb\106\uffcb\110\uffcb\001\002\000\004\106" +
    "\u027c\001\002\000\012\003\uffcc\047\uffcc\106\uffcc\110\uffcc" +
    "\001\002\000\006\003\uffd8\047\uffd8\001\002\000\014\003" +
    "\uffd7\047\uffd7\104\u0276\106\u0277\107\u0275\001\002\000\012" +
    "\003\uffdb\047\uffdb\106\u0281\110\u0280\001\002\000\006\052" +
    "\u0286\106\u0285\001\002\000\004\052\u0283\001\002\000\006" +
    "\003\uffda\047\uffda\001\002\000\010\104\u0276\106\u0277\107" +
    "\u0275\001\002\000\006\003\uffd3\047\uffd3\001\002\000\012" +
    "\052\u0289\104\u0276\106\u0277\107\u0275\001\002\000\010\104" +
    "\u0276\106\u0277\107\u0275\001\002\000\006\003\uffd2\047\uffd2" +
    "\001\002\000\006\003\uffd1\047\uffd1\001\002\000\014\003" +
    "\uffd0\047\uffd0\104\u0276\106\u0277\107\u0275\001\002\000\012" +
    "\003\uffd5\047\uffd5\106\u0281\110\u0280\001\002\000\006\003" +
    "\uffd4\047\uffd4\001\002\000\006\003\u0292\046\u0293\001\002" +
    "\000\004\046\u028e\001\002\000\010\047\uffd6\052\u0271\106" +
    "\u0270\001\002\000\004\047\u0290\001\002\000\004\043\u0291" +
    "\001\002\000\014\002\uffe1\010\uffe1\021\uffe1\022\uffe1\045" +
    "\uffe1\001\002\000\010\047\uffd6\052\u0271\106\u0270\001\002" +
    "\000\012\003\uffd6\047\uffd6\052\u0271\106\u0270\001\002\000" +
    "\006\003\u0295\047\u0296\001\002\000\004\043\u029a\001\002" +
    "\000\006\003\u0297\043\u0298\001\002\000\004\051\u0299\001" +
    "\002\000\014\002\uffe4\010\uffe4\021\uffe4\022\uffe4\045\uffe4" +
    "\001\002\000\014\002\uffde\010\uffde\021\uffde\022\uffde\045" +
    "\uffde\001\002\000\014\002\uffdf\010\uffdf\021\uffdf\022\uffdf" +
    "\045\uffdf\001\002\000\004\047\u029c\001\002\000\004\043" +
    "\u029d\001\002\000\014\002\uffe0\010\uffe0\021\uffe0\022\uffe0" +
    "\045\uffe0\001\002\000\004\110\u029f\001\002\000\004\046" +
    "\u02a0\001\002\000\010\047\uffd6\052\u0271\106\u0270\001\002" +
    "\000\004\047\u02a2\001\002\000\004\043\u02a3\001\002\000" +
    "\014\002\uffe3\010\uffe3\021\uffe3\022\uffe3\045\uffe3\001\002" +
    "\000\004\045\u02a9\001\002\000\042\003\062\011\036\012" +
    "\072\014\052\016\067\044\037\045\u02a7\075\057\104\053" +
    "\117\063\120\046\123\055\127\044\164\054\165\061\167" +
    "\047\001\002\000\010\002\ufff7\021\ufff7\045\u02a8\001\002" +
    "\000\014\002\ufffb\010\uffec\021\ufffb\022\uffec\045\uffec\001" +
    "\002\000\006\002\ufffd\021\ufffd\001\002\000\006\002\ufff8" +
    "\021\ufff8\001\002\000\006\011\036\044\037\001\002\000" +
    "\004\045\u02ac\001\002\000\006\002\ufffa\021\ufffa\001\002" +
    "" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\u02aa\000\006\002\007\047\006\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\003\012" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\003\030\001\001\000\002\001\001\000\002" +
    "\001\001\000\006\021\034\031\u02a3\001\001\000\006\021" +
    "\034\031\037\001\001\000\010\012\u0257\020\u0255\022\u0256" +
    "\001\001\000\030\004\041\006\u024d\010\070\014\047\033" +
    "\067\035\065\036\055\037\057\044\050\045\042\046\064" +
    "\001\001\000\030\004\041\006\044\010\070\014\047\033" +
    "\067\035\065\036\055\037\057\044\050\045\042\046\064" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\026\004\237" +
    "\010\251\014\240\033\250\035\247\036\242\037\243\044" +
    "\241\045\042\046\246\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\025\u017c\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\025\355\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\025\110\001\001\000\004\025" +
    "\106\001\001\000\002\001\001\000\004\025\100\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\025\116\001\001\000\004" +
    "\025\114\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\013\343\015\130\001\001" +
    "\000\006\013\132\015\130\001\001\000\002\001\001\000" +
    "\006\016\311\024\264\001\001\000\006\016\261\024\264" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\030\004\041\006\252\010\070\014\047\033\067" +
    "\035\065\036\055\037\057\044\050\045\042\046\064\001" +
    "\001\000\030\004\041\006\137\010\070\014\047\033\067" +
    "\035\065\036\055\037\057\044\050\045\042\046\064\001" +
    "\001\000\026\004\237\010\251\014\240\033\250\035\247" +
    "\036\242\037\243\044\241\045\042\046\246\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\012\040\156\041\146\042" +
    "\165\043\164\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\026\004\237\010\251\014\240\033" +
    "\250\035\247\036\242\037\243\044\241\045\042\046\246" +
    "\001\001\000\002\001\001\000\002\001\001\000\030\004" +
    "\041\006\256\010\070\014\047\033\067\035\065\036\055" +
    "\037\057\044\050\045\042\046\064\001\001\000\026\004" +
    "\237\010\251\014\240\033\250\035\247\036\242\037\243" +
    "\044\241\045\042\046\246\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\005\276\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\024\277\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\017\304\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\016\325\024\264\001\001" +
    "\000\006\016\314\024\264\001\001\000\004\017\321\001" +
    "\001\000\004\017\316\001\001\000\002\001\001\000\004" +
    "\017\324\001\001\000\004\017\323\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\017\327\001\001\000\002\001" +
    "\001\000\004\017\331\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\030\004\041\006\346\010\070\014\047" +
    "\033\067\035\065\036\055\037\057\044\050\045\042\046" +
    "\064\001\001\000\026\004\237\010\251\014\240\033\250" +
    "\035\247\036\242\037\243\044\241\045\042\046\246\001" +
    "\001\000\002\001\001\000\002\001\001\000\030\004\041" +
    "\006\352\010\070\014\047\033\067\035\065\036\055\037" +
    "\057\044\050\045\042\046\064\001\001\000\026\004\237" +
    "\010\251\014\240\033\250\035\247\036\242\037\243\044" +
    "\241\045\042\046\246\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\034\370\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\034\374\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\034\u0100\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\034\u0105\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\034\u0109\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\034\u010d\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\034\u0111\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\034\u0163\001\001\000\004\034\u0117" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\034\u011d\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\034\u0121\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\034" +
    "\u0149\001\001\000\004\034\u0127\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\034\u012d\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\034\u013b\001\001\000\004\034\u0133\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\034\u0140\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\034\u0146\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\034\u014d\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\034\u0152\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\034\u0156\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\034\u015c\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\034\u0160\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\034\u0167\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\034\u016b\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\034\u0171\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\034\u0175" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\034\u0179\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\025" +
    "\u0195\001\001\000\006\011\u0190\025\u018e\001\001\000\004" +
    "\011\u0182\001\001\000\004\030\u0189\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\011\u018c\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\011\u018b" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\030" +
    "\u0189\001\001\000\002\001\001\000\004\025\u0192\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\011\u01bb" +
    "\001\001\000\004\011\u01aa\001\001\000\004\011\u019f\001" +
    "\001\000\002\001\001\000\002\001\001\000\030\004\041" +
    "\006\u01a2\010\070\014\047\033\067\035\065\036\055\037" +
    "\057\044\050\045\042\046\064\001\001\000\026\004\237" +
    "\010\251\014\240\033\250\035\247\036\242\037\243\044" +
    "\241\045\042\046\246\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\030\004\041\006\u01a7\010" +
    "\070\014\047\033\067\035\065\036\055\037\057\044\050" +
    "\045\042\046\064\001\001\000\026\004\237\010\251\014" +
    "\240\033\250\035\247\036\242\037\243\044\241\045\042" +
    "\046\246\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\011\u01ac\001\001\000\002\001\001" +
    "\000\002\001\001\000\030\004\041\006\u01af\010\070\014" +
    "\047\033\067\035\065\036\055\037\057\044\050\045\042" +
    "\046\064\001\001\000\026\004\237\010\251\014\240\033" +
    "\250\035\247\036\242\037\243\044\241\045\042\046\246" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\030\004\041\006\u01b4\010\070\014\047\033\067" +
    "\035\065\036\055\037\057\044\050\045\042\046\064\001" +
    "\001\000\026\004\237\010\251\014\240\033\250\035\247" +
    "\036\242\037\243\044\241\045\042\046\246\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\030" +
    "\004\041\006\u01b9\010\070\014\047\033\067\035\065\036" +
    "\055\037\057\044\050\045\042\046\064\001\001\000\026" +
    "\004\237\010\251\014\240\033\250\035\247\036\242\037" +
    "\243\044\241\045\042\046\246\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\011\u01fe\001\001\000\002\001" +
    "\001\000\004\011\u01c0\001\001\000\002\001\001\000\002" +
    "\001\001\000\030\004\041\006\u01cf\010\070\014\047\033" +
    "\067\035\065\036\055\037\057\044\050\045\042\046\064" +
    "\001\001\000\002\001\001\000\030\004\041\006\u01c4\010" +
    "\070\014\047\033\067\035\065\036\055\037\057\044\050" +
    "\045\042\046\064\001\001\000\026\004\237\010\251\014" +
    "\240\033\250\035\247\036\242\037\243\044\241\045\042" +
    "\046\246\001\001\000\002\001\001\000\002\001\001\000" +
    "\030\004\041\006\u01cc\010\070\014\047\033\067\035\065" +
    "\036\055\037\057\044\050\045\042\046\064\001\001\000" +
    "\030\004\041\006\u01c9\010\070\014\047\033\067\035\065" +
    "\036\055\037\057\044\050\045\042\046\064\001\001\000" +
    "\026\004\237\010\251\014\240\033\250\035\247\036\242" +
    "\037\243\044\241\045\042\046\246\001\001\000\002\001" +
    "\001\000\002\001\001\000\026\004\237\010\251\014\240" +
    "\033\250\035\247\036\242\037\243\044\241\045\042\046" +
    "\246\001\001\000\002\001\001\000\002\001\001\000\026" +
    "\004\237\010\251\014\240\033\250\035\247\036\242\037" +
    "\243\044\241\045\042\046\246\001\001\000\002\001\001" +
    "\000\030\004\041\006\u01d2\010\070\014\047\033\067\035" +
    "\065\036\055\037\057\044\050\045\042\046\064\001\001" +
    "\000\026\004\237\010\251\014\240\033\250\035\247\036" +
    "\242\037\243\044\241\045\042\046\246\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\030\004\041\006" +
    "\u01dd\010\070\014\047\033\067\035\065\036\055\037\057" +
    "\044\050\045\042\046\064\001\001\000\026\004\237\010" +
    "\251\014\240\033\250\035\247\036\242\037\243\044\241" +
    "\045\042\046\246\001\001\000\002\001\001\000\002\001" +
    "\001\000\030\004\041\006\u01e5\010\070\014\047\033\067" +
    "\035\065\036\055\037\057\044\050\045\042\046\064\001" +
    "\001\000\030\004\041\006\u01e2\010\070\014\047\033\067" +
    "\035\065\036\055\037\057\044\050\045\042\046\064\001" +
    "\001\000\026\004\237\010\251\014\240\033\250\035\247" +
    "\036\242\037\243\044\241\045\042\046\246\001\001\000" +
    "\002\001\001\000\002\001\001\000\026\004\237\010\251" +
    "\014\240\033\250\035\247\036\242\037\243\044\241\045" +
    "\042\046\246\001\001\000\002\001\001\000\002\001\001" +
    "\000\030\004\041\006\u01f0\010\070\014\047\033\067\035" +
    "\065\036\055\037\057\044\050\045\042\046\064\001\001" +
    "\000\002\001\001\000\030\004\041\006\u01eb\010\070\014" +
    "\047\033\067\035\065\036\055\037\057\044\050\045\042" +
    "\046\064\001\001\000\026\004\237\010\251\014\240\033" +
    "\250\035\247\036\242\037\243\044\241\045\042\046\246" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\026\004\237\010\251\014\240" +
    "\033\250\035\247\036\242\037\243\044\241\045\042\046" +
    "\246\001\001\000\002\001\001\000\030\004\041\006\u01f3" +
    "\010\070\014\047\033\067\035\065\036\055\037\057\044" +
    "\050\045\042\046\064\001\001\000\026\004\237\010\251" +
    "\014\240\033\250\035\247\036\242\037\243\044\241\045" +
    "\042\046\246\001\001\000\002\001\001\000\002\001\001" +
    "\000\030\004\041\006\u01f7\010\070\014\047\033\067\035" +
    "\065\036\055\037\057\044\050\045\042\046\064\001\001" +
    "\000\026\004\237\010\251\014\240\033\250\035\247\036" +
    "\242\037\243\044\241\045\042\046\246\001\001\000\002" +
    "\001\001\000\002\001\001\000\030\004\041\006\u01fb\010" +
    "\070\014\047\033\067\035\065\036\055\037\057\044\050" +
    "\045\042\046\064\001\001\000\026\004\237\010\251\014" +
    "\240\033\250\035\247\036\242\037\243\044\241\045\042" +
    "\046\246\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\030\004\041\006\u0201" +
    "\010\070\014\047\033\067\035\065\036\055\037\057\044" +
    "\050\045\042\046\064\001\001\000\026\004\237\010\251" +
    "\014\240\033\250\035\247\036\242\037\243\044\241\045" +
    "\042\046\246\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\030\004\041\006\u0206\010\070\014" +
    "\047\033\067\035\065\036\055\037\057\044\050\045\042" +
    "\046\064\001\001\000\026\004\237\010\251\014\240\033" +
    "\250\035\247\036\242\037\243\044\241\045\042\046\246" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\034\u0212\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\034\u0218\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\034\u0226\001" +
    "\001\000\004\034\u021e\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\034\u022c\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\025\u0237\001\001" +
    "\000\004\025\u0232\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\012\040\u023f\041\146\042\165\043\164\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\012\040\u0246\041\146\042\165\043\164\001\001\000" +
    "\012\040\u0244\041\146\042\165\043\164\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\012\040" +
    "\u0248\041\146\042\165\043\164\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\012\040\u024c\041" +
    "\146\042\165\043\164\001\001\000\002\001\001\000\026" +
    "\004\237\010\251\014\240\033\250\035\247\036\242\037" +
    "\243\044\241\045\042\046\246\001\001\000\002\001\001" +
    "\000\030\004\041\006\u0250\010\070\014\047\033\067\035" +
    "\065\036\055\037\057\044\050\045\042\046\064\001\001" +
    "\000\026\004\237\010\251\014\240\033\250\035\247\036" +
    "\242\037\243\044\241\045\042\046\246\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\010\012\u0257\020\u0266\022\u0256" +
    "\001\001\000\010\012\u0257\020\u0265\022\u0256\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\030" +
    "\004\041\006\u025c\010\070\014\047\033\067\035\065\036" +
    "\055\037\057\044\050\045\042\046\064\001\001\000\026" +
    "\004\237\010\251\014\240\033\250\035\247\036\242\037" +
    "\243\044\241\045\042\046\246\001\001\000\002\001\001" +
    "\000\030\004\041\006\u0263\010\070\014\047\033\067\035" +
    "\065\036\055\037\057\044\050\045\042\046\064\001\001" +
    "\000\030\004\041\006\u0260\010\070\014\047\033\067\035" +
    "\065\036\055\037\057\044\050\045\042\046\064\001\001" +
    "\000\026\004\237\010\251\014\240\033\250\035\247\036" +
    "\242\037\243\044\241\045\042\046\246\001\001\000\002" +
    "\001\001\000\002\001\001\000\026\004\237\010\251\014" +
    "\240\033\250\035\247\036\242\037\243\044\241\045\042" +
    "\046\246\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\032\u029d\001\001\000\004\032\u026b" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\023\u0271" +
    "\001\001\000\004\026\u027c\001\001\000\004\026\u0277\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\026" +
    "\u027e\001\001\000\004\027\u0281\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\026\u0283\001" +
    "\001\000\002\001\001\000\004\026\u0287\001\001\000\004" +
    "\026\u0286\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\026\u0289\001\001\000\004\027\u028a\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\023" +
    "\u028e\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\023\u029a\001\001\000\004\023\u0293\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\023" +
    "\u02a0\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\034\004\041\006\044\010" +
    "\070\014\047\021\034\031\u02a5\033\067\035\065\036\055" +
    "\037\057\044\050\045\042\046\064\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\006\021\034\031\u02aa\001\001\000\002\001\001\000" +
    "\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$CupObjeto$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$CupObjeto$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$CupObjeto$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}



    boolean esId;
    String tipoActual;
    String salidaTipoActual;
    Object valorActual;
    String valorActualTipo;
    String fil,col;
    ArrayList<Error1> ManejadorDeErrores;
    boolean esDAssig=false;
    int fl;
    

    public CupObjeto(java_cup.runtime.Scanner s,ArrayList<Error1> m,int tfl) {
        super(s);
        ManejadorDeErrores =m;
        fl = tfl;
    }
    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception{
        report_error("No se encontró ;",s);

    }

    public void syntax_error(Symbol s){
        //report_error("Sintactico",s);
    }

    public void report_error(String message, Object info){
        if(info!=null){
            java_cup.runtime.Symbol s =(java_cup.runtime.Symbol)info;
            String valor="";
            if(s.value!=null){
                valor = s.value.toString();
            }
        ManejadorDeErrores.add(new Error1(message,s.left,s.right,valor));
        }else{
            ManejadorDeErrores.add(new Error1(message,-1,-1,"?????"));
        }
    }
    /*public static void main(String[] args){
        try {
                Cup sintactico = new Cup(new Lexer(new FileReader(args[0])));
            try{
                Object result = sintactico.parse().value;
            }catch(Exception ex){


            }
            System.out.println("\n*** Resultados finales ***");
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }*/

}

/** Cup generated class to encapsulate user supplied action code.*/
class CUP$CupObjeto$actions {


    static String fin="";
    
  private final CupObjeto parser;

  /** Constructor */
  CUP$CupObjeto$actions(CupObjeto parser) {
    this.parser = parser;
  }

  /** Method with the actual generated action code. */
  public final java_cup.runtime.Symbol CUP$CupObjeto$do_action(
    int                        CUP$CupObjeto$act_num,
    java_cup.runtime.lr_parser CUP$CupObjeto$parser,
    java.util.Stack            CUP$CupObjeto$stack,
    int                        CUP$CupObjeto$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$CupObjeto$result;

      /* select the action based on the action number */
      switch (CUP$CupObjeto$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 275: // parametros2 ::= COMA 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.peek()).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("parametros2",22, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 274: // parametros2 ::= ID parametros 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("parametros2",22, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 273: // parametros2 ::= COMA ID parametros 
            {
              Object RESULT =null;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("parametros2",22, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-2)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 272: // parametros2 ::= COMA ID 
            {
              Object RESULT =null;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("parametros2",22, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 271: // parametros ::= ID parametros2 
            {
              Object RESULT =null;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("parametros",7, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 270: // parametros ::= ID 
            {
              Object RESULT =null;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("parametros",7, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 269: // funcion ::= FUNCTION ID PARENTESIS_A PARENTESIS_C LLAVE_A error 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.peek()).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("funcion",6, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-5)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 268: // funcion ::= FUNCTION ID PARENTESIS_A PARENTESIS_C error LLAVE_C 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("funcion",6, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-5)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 267: // funcion ::= FUNCTION ID PARENTESIS_A LLAVE_A LLAVE_C 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-2)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-2)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-2)).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("funcion",6, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-4)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 266: // funcion ::= FUNCTION ID PARENTESIS_C LLAVE_A LLAVE_C 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-3)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-3)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-3)).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("funcion",6, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-4)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 265: // funcion ::= FUNCTION PARENTESIS_A PARENTESIS_C LLAVE_A LLAVE_C 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-4)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-4)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-4)).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("funcion",6, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-4)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 264: // funcion ::= FUNCTION ID PARENTESIS_A PARENTESIS_A LLAVE_A error 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.peek()).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("funcion",6, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-5)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 263: // funcion ::= FUNCTION ID PARENTESIS_A PARENTESIS_A error LLAVE_C 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("funcion",6, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-5)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 262: // funcion ::= FUNCTION ID PARENTESIS_A error LLAVE_A LLAVE_C 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-2)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-2)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-2)).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("funcion",6, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-5)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 261: // funcion ::= FUNCTION ID error PARENTESIS_C LLAVE_A LLAVE_C 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-3)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-3)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-3)).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("funcion",6, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-5)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 260: // funcion ::= FUNCTION error PARENTESIS_A PARENTESIS_C LLAVE_A LLAVE_C 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-4)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-4)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-4)).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("funcion",6, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-5)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 259: // funcion ::= FUNCTION ID PARENTESIS_A parametros PARENTESIS_C LLAVE_A error 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.peek()).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("funcion",6, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-6)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 258: // funcion ::= FUNCTION ID PARENTESIS_A parametros PARENTESIS_C LLAVE_C 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("funcion",6, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-5)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 257: // funcion ::= FUNCTION ID PARENTESIS_A parametros LLAVE_A LLAVE_C 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-2)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-2)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-2)).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("funcion",6, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-5)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 256: // funcion ::= FUNCTION ID parametros PARENTESIS_C LLAVE_A LLAVE_C 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-4)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-4)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-4)).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("funcion",6, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-5)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 255: // funcion ::= FUNCTION PARENTESIS_A parametros PARENTESIS_C LLAVE_A LLAVE_C 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-5)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-5)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-5)).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("funcion",6, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-5)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 254: // funcion ::= FUNCTION ID PARENTESIS_A parametros PARENTESIS_A LLAVE_A error 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.peek()).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("funcion",6, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-6)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 253: // funcion ::= FUNCTION ID PARENTESIS_A parametros PARENTESIS_A error LLAVE_C 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("funcion",6, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-6)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 252: // funcion ::= FUNCTION ID PARENTESIS_A parametros error LLAVE_A LLAVE_C 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-2)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-2)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-2)).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("funcion",6, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-6)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 251: // funcion ::= FUNCTION ID error parametros PARENTESIS_C LLAVE_A LLAVE_C 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-4)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-4)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-4)).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("funcion",6, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-6)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 250: // funcion ::= FUNCTION error PARENTESIS_A parametros PARENTESIS_C LLAVE_A LLAVE_C 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-5)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-5)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-5)).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("funcion",6, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-6)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 249: // funcion ::= FUNCTION ID PARENTESIS_A PARENTESIS_C LLAVE_A cuerpo error 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.peek()).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("funcion",6, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-6)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 248: // funcion ::= FUNCTION ID PARENTESIS_A PARENTESIS_C cuerpo LLAVE_C 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-2)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-2)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-2)).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("funcion",6, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-5)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 247: // funcion ::= FUNCTION ID PARENTESIS_A LLAVE_A cuerpo LLAVE_C 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-3)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-3)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-3)).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("funcion",6, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-5)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 246: // funcion ::= FUNCTION ID PARENTESIS_C LLAVE_A cuerpo LLAVE_C 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-4)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-4)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-4)).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("funcion",6, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-5)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 245: // funcion ::= FUNCTION PARENTESIS_A PARENTESIS_C LLAVE_A cuerpo LLAVE_C 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-5)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-5)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-5)).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("funcion",6, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-5)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 244: // funcion ::= FUNCTION ID PARENTESIS_A PARENTESIS_A LLAVE_A cuerpo error 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.peek()).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("funcion",6, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-6)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 243: // funcion ::= FUNCTION ID PARENTESIS_A PARENTESIS_A error cuerpo LLAVE_C 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-2)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-2)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-2)).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("funcion",6, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-6)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 242: // funcion ::= FUNCTION ID PARENTESIS_A error LLAVE_A cuerpo LLAVE_C 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-3)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-3)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-3)).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("funcion",6, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-6)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 241: // funcion ::= FUNCTION ID error PARENTESIS_C LLAVE_A cuerpo LLAVE_C 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-4)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-4)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-4)).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("funcion",6, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-6)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 240: // funcion ::= FUNCTION error PARENTESIS_A PARENTESIS_C LLAVE_A cuerpo LLAVE_C 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-5)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-5)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-5)).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("funcion",6, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-6)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 239: // funcion ::= FUNCTION ID PARENTESIS_A parametros PARENTESIS_C LLAVE_A cuerpo error 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.peek()).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("funcion",6, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-7)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 238: // funcion ::= FUNCTION ID PARENTESIS_A parametros PARENTESIS_C error cuerpo LLAVE_C 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-2)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-2)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-2)).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("funcion",6, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-7)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 237: // funcion ::= FUNCTION ID PARENTESIS_A parametros LLAVE_A cuerpo LLAVE_C 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-3)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-3)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-3)).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("funcion",6, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-6)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 236: // funcion ::= FUNCTION error parametros PARENTESIS_C LLAVE_A cuerpo LLAVE_C 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-5)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-5)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-5)).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("funcion",6, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-6)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 235: // funcion ::= FUNCTION PARENTESIS_A parametros PARENTESIS_C LLAVE_A cuerpo LLAVE_C 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-6)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-6)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-6)).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("funcion",6, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-6)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 234: // funcion ::= FUNCTION ID PARENTESIS_A parametros PARENTESIS_A LLAVE_A cuerpo error 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.peek()).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("funcion",6, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-7)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 233: // funcion ::= FUNCTION ID PARENTESIS_A parametros PARENTESIS_A error cuerpo LLAVE_C 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-2)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-2)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-2)).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("funcion",6, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-7)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 232: // funcion ::= FUNCTION ID PARENTESIS_A parametros error LLAVE_A cuerpo LLAVE_C 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-3)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-3)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-3)).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("funcion",6, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-7)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 231: // funcion ::= FUNCTION ID error parametros PARENTESIS_C LLAVE_A cuerpo LLAVE_C 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-5)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-5)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-5)).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("funcion",6, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-7)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 230: // funcion ::= FUNCTION error PARENTESIS_A parametros PARENTESIS_C LLAVE_A cuerpo LLAVE_C 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-6)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-6)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-6)).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("funcion",6, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-7)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 229: // funcion ::= FUNCTION ID PARENTESIS_A parametros PARENTESIS_C LLAVE_A LLAVE_C 
            {
              Object RESULT =null;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("funcion",6, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-6)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 228: // funcion ::= FUNCTION ID PARENTESIS_A PARENTESIS_C LLAVE_A cuerpo LLAVE_C 
            {
              Object RESULT =null;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("funcion",6, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-6)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 227: // funcion ::= FUNCTION ID PARENTESIS_A PARENTESIS_C LLAVE_A LLAVE_C 
            {
              Object RESULT =null;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("funcion",6, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-5)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 226: // funcion ::= FUNCTION ID PARENTESIS_A parametros PARENTESIS_C LLAVE_A cuerpo LLAVE_C 
            {
              Object RESULT =null;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("funcion",6, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-7)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 225: // comparador ::= DIFERENTE 
            {
              Object RESULT =null;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("comparador",3, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 224: // comparador ::= IGUAL2 
            {
              Object RESULT =null;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("comparador",3, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 223: // comparador ::= IGUAL 
            {
              Object RESULT =null;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("comparador",3, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 222: // comparador ::= MENORIGUAL 
            {
              Object RESULT =null;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("comparador",3, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 221: // comparador ::= MENORQUE 
            {
              Object RESULT =null;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("comparador",3, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 220: // comparador ::= MAYORIGUAL 
            {
              Object RESULT =null;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("comparador",3, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 219: // comparador ::= MAYORQUE 
            {
              Object RESULT =null;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("comparador",3, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 218: // compuerta ::= XOR 
            {
              Object RESULT =null;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("compuerta",5, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 217: // compuerta ::= ORSIMPLE 
            {
              Object RESULT =null;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("compuerta",5, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 216: // compuerta ::= OR 
            {
              Object RESULT =null;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("compuerta",5, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 215: // compuerta ::= ANDSIMPLE 
            {
              Object RESULT =null;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("compuerta",5, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 214: // compuerta ::= AND 
            {
              Object RESULT =null;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("compuerta",5, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 213: // NUMIDSTR ::= INVNUMERO NUMERO 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("NUMIDSTR",19, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 212: // NUMIDSTR ::= NUMERO INVNUMERO 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.peek()).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("NUMIDSTR",19, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 211: // NUMIDSTR ::= STRING 
            {
              Object RESULT =null;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("NUMIDSTR",19, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 210: // NUMIDSTR ::= ID 
            {
              Object RESULT =null;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("NUMIDSTR",19, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 209: // NUMIDSTR ::= NUMERO 
            {
              Object RESULT =null;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("NUMIDSTR",19, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 208: // asignarVariable ::= ID error NUMIDSTR PUNTOCOMA 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-2)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-2)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-2)).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("asignarVariable",2, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-3)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 207: // asignarVariable ::= ID ASIGNACION NUMIDSTR error 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.peek()).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("asignarVariable",2, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-3)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 206: // asignarVariable ::= ID ASIGNACION error PUNTOCOMA 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("asignarVariable",2, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-3)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 205: // asignarVariable ::= ID error ASIGNACION NUMIDSTR PUNTOCOMA 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-3)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-3)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-3)).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("asignarVariable",2, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-4)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 204: // asignarVariable ::= VAR ID ASIGNACION NUMIDSTR error 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.peek()).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("asignarVariable",2, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-4)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 203: // asignarVariable ::= VAR ID ASIGNACION error PUNTOCOMA 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("asignarVariable",2, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-4)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 202: // asignarVariable ::= VAR ID error NUMIDSTR PUNTOCOMA 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-2)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-2)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-2)).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("asignarVariable",2, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-4)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 201: // asignarVariable ::= VAR error ASIGNACION NUMIDSTR PUNTOCOMA 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-3)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-3)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-3)).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("asignarVariable",2, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-4)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 200: // asignarVariable ::= ASIGNACION NUMIDSTR PUNTOCOMA 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-2)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-2)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-2)).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("asignarVariable",2, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-2)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 199: // asignarVariable ::= ID ASIGNACION PUNTOCOMA 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("asignarVariable",2, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-2)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 198: // asignarVariable ::= ID NUMIDSTR PUNTOCOMA 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-2)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-2)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-2)).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("asignarVariable",2, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-2)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 197: // asignarVariable ::= VAR ID PUNTOCOMA 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("asignarVariable",2, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-2)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 196: // asignarVariable ::= VAR ASIGNACION NUMIDSTR PUNTOCOMA 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-3)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-3)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-3)).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("asignarVariable",2, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-3)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 195: // asignarVariable ::= VAR ID ASIGNACION PUNTOCOMA 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("asignarVariable",2, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-3)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 194: // asignarVariable ::= VAR ID NUMIDSTR PUNTOCOMA 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-2)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-2)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-2)).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("asignarVariable",2, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-3)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 193: // asignarVariable ::= ID ASIGNACION NUMIDSTR PUNTOCOMA 
            {
              Object RESULT =null;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("asignarVariable",2, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-3)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 192: // asignarVariable ::= VAR ID ASIGNACION NUMIDSTR PUNTOCOMA 
            {
              Object RESULT =null;
		fin=fin+"VAR ID =STRING; \n";
              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("asignarVariable",2, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-4)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 191: // NUMID ::= INVNUMERO NUMERO 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.peek()).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("NUMID",18, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 190: // NUMID ::= NUMERO INVNUMERO 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("NUMID",18, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 189: // NUMID ::= NUMERO 
            {
              Object RESULT =null;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("NUMID",18, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 188: // NUMID ::= ID 
            {
              Object RESULT =null;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("NUMID",18, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 187: // expFor3 ::= ID error 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.peek()).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("expFor3",13, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 186: // expFor3 ::= error OPERDECREMENTO 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("expFor3",13, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 185: // expFor3 ::= ID OPERDECREMENTO 
            {
              Object RESULT =null;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("expFor3",13, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 184: // expFor3 ::= ID OPERCREMENTO 
            {
              Object RESULT =null;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("expFor3",13, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 183: // expFor2 ::= NUMID 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.peek()).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("expFor2",12, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 182: // expFor2 ::= NUMID comparador NUMID 
            {
              Object RESULT =null;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("expFor2",12, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-2)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 181: // expFor1 ::= VAR ID ASIGNACION INVNUMERO 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.peek()).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("expFor1",11, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-3)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 180: // expFor1 ::= VAR ID error NUMERO 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("expFor1",11, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-3)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 179: // expFor1 ::= VAR error ASIGNACION NUMERO 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-2)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-2)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-2)).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("expFor1",11, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-3)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 178: // expFor1 ::= VAR ID ASIGNACION NUMERO 
            {
              Object RESULT =null;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("expFor1",11, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-3)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 177: // condicionFor ::= expFor1 PUNTOCOMA expFor2 expFor3 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("condicionFor",9, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-3)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 176: // condicionFor ::= expFor1 PUNTOCOMA PUNTOCOMA expFor3 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-2)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-2)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-2)).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("condicionFor",9, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-3)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 175: // condicionFor ::= expFor1 expFor2 PUNTOCOMA expFor3 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-3)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-3)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-3)).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("condicionFor",9, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-3)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 174: // condicionFor ::= PUNTOCOMA expFor2 PUNTOCOMA expFor3 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-3)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-3)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-3)).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("condicionFor",9, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-3)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 173: // condicionFor ::= expFor1 PUNTOCOMA expFor2 PUNTOCOMA error 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.peek()).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("condicionFor",9, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-4)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 172: // condicionFor ::= expFor1 PUNTOCOMA expFor2 error expFor3 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("condicionFor",9, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-4)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 171: // condicionFor ::= expFor1 error expFor2 PUNTOCOMA expFor3 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-3)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-3)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-3)).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("condicionFor",9, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-4)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 170: // condicionFor ::= expFor1 PUNTOCOMA expFor2 PUNTOCOMA expFor3 
            {
              Object RESULT =null;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("condicionFor",9, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-4)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 169: // sentenciaFor ::= FOR PARENTESIS_A condicionFor PARENTESIS_C LLAVE_A cuerpo error 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.peek()).value;
		  
              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("sentenciaFor",10, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-6)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 168: // sentenciaFor ::= FOR PARENTESIS_A condicionFor PARENTESIS_C error cuerpo LLAVE_C 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-2)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-2)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-2)).value;
		  
              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("sentenciaFor",10, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-6)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 167: // sentenciaFor ::= FOR PARENTESIS_A condicionFor error LLAVE_A cuerpo LLAVE_C 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-3)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-3)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-3)).value;
		  
              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("sentenciaFor",10, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-6)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 166: // sentenciaFor ::= FOR error condicionFor PARENTESIS_C LLAVE_A cuerpo LLAVE_C 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-5)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-5)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-5)).value;
		  
              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("sentenciaFor",10, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-6)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 165: // sentenciaFor ::= FOR PARENTESIS_A condicionFor PARENTESIS_C LLAVE_A error 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.peek()).value;
		  
              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("sentenciaFor",10, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-5)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 164: // sentenciaFor ::= FOR PARENTESIS_A condicionFor PARENTESIS_C error LLAVE_C 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)).value;
		  
              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("sentenciaFor",10, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-5)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 163: // sentenciaFor ::= FOR PARENTESIS_A condicionFor error LLAVE_A LLAVE_C 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-2)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-2)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-2)).value;
		  
              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("sentenciaFor",10, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-5)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 162: // sentenciaFor ::= FOR error condicionFor PARENTESIS_C LLAVE_A LLAVE_C 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-4)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-4)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-4)).value;
		  
              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("sentenciaFor",10, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-5)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 161: // sentenciaFor ::= FOR PARENTESIS_A condicionFor PARENTESIS_C LLAVE_A LLAVE_C 
            {
              Object RESULT =null;
		  
              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("sentenciaFor",10, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-5)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 160: // sentenciaFor ::= FOR PARENTESIS_A condicionFor PARENTESIS_C LLAVE_A cuerpo LLAVE_C 
            {
              Object RESULT =null;
		  
              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("sentenciaFor",10, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-6)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 159: // sentenciaDeclare ::= DECLARE PAGE ID LLAVE_A error 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.peek()).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("sentenciaDeclare",1, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-4)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 158: // sentenciaDeclare ::= DECLARE PAGE ID error LLAVE_C 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("sentenciaDeclare",1, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-4)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 157: // sentenciaDeclare ::= DECLARE PAGE error LLAVE_A LLAVE_C 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-2)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-2)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-2)).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("sentenciaDeclare",1, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-4)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 156: // sentenciaDeclare ::= DECLARE error ID LLAVE_A LLAVE_C 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-3)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-3)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-3)).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("sentenciaDeclare",1, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-4)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 155: // sentenciaDeclare ::= DECLARE PAGE ID LLAVE_A LLAVE_C sentenciaDeclare 
            {
              Object RESULT =null;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("sentenciaDeclare",1, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-5)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 154: // sentenciaDeclare ::= DECLARE PAGE ID LLAVE_A LLAVE_C 
            {
              Object RESULT =null;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("sentenciaDeclare",1, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-4)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 153: // divElem ::= DIV LLAVE_A LLAVE_C 
            {
              Object RESULT =null;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("divElem",36, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-2)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 152: // divElem ::= DIV LLAVE_A cuerpo LLAVE_C 
            {
              Object RESULT =null;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("divElem",36, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-3)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 151: // cuerpoTabla ::= STRING error 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.peek()).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("cuerpoTabla",26, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 150: // cuerpoTabla ::= error 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.peek()).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("cuerpoTabla",26, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 149: // cuerpoTabla ::= STRING COMA cuerpoTabla 
            {
              Object RESULT =null;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("cuerpoTabla",26, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-2)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 148: // cuerpoTabla ::= STRING 
            {
              Object RESULT =null;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("cuerpoTabla",26, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 147: // tabla ::= TABLE PARENTESIS_A STRING COMA CORCHETE_A cuerpoTabla CORCHETE_C COMA CORCHETE_A cuerpoTabla CORCHETE_C COMA CORCHETE_A cuerpoTabla CORCHETE_C error 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.peek()).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("tabla",25, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-15)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 146: // tabla ::= TABLE PARENTESIS_A STRING COMA CORCHETE_A cuerpoTabla CORCHETE_C COMA CORCHETE_A cuerpoTabla CORCHETE_C COMA CORCHETE_A cuerpoTabla error PARENTESIS_C 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("tabla",25, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-15)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 145: // tabla ::= TABLE PARENTESIS_A STRING COMA CORCHETE_A cuerpoTabla CORCHETE_C COMA CORCHETE_A cuerpoTabla CORCHETE_C COMA CORCHETE_A error CORCHETE_C PARENTESIS_C 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-2)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-2)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-2)).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("tabla",25, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-15)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 144: // tabla ::= TABLE PARENTESIS_A STRING COMA CORCHETE_A cuerpoTabla CORCHETE_C COMA CORCHETE_A cuerpoTabla CORCHETE_C COMA error cuerpoTabla CORCHETE_C PARENTESIS_C 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-3)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-3)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-3)).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("tabla",25, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-15)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 143: // tabla ::= TABLE PARENTESIS_A STRING COMA CORCHETE_A cuerpoTabla CORCHETE_C COMA CORCHETE_A cuerpoTabla CORCHETE_C error CORCHETE_A cuerpoTabla CORCHETE_C PARENTESIS_C 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-4)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-4)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-4)).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("tabla",25, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-15)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 142: // tabla ::= TABLE PARENTESIS_A STRING COMA CORCHETE_A cuerpoTabla CORCHETE_C COMA CORCHETE_A cuerpoTabla error COMA CORCHETE_A cuerpoTabla CORCHETE_C PARENTESIS_C 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-5)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-5)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-5)).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("tabla",25, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-15)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 141: // tabla ::= TABLE PARENTESIS_A STRING COMA CORCHETE_A cuerpoTabla CORCHETE_C COMA CORCHETE_A error CORCHETE_C COMA CORCHETE_A cuerpoTabla CORCHETE_C PARENTESIS_C 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-6)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-6)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-6)).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("tabla",25, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-15)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 140: // tabla ::= TABLE PARENTESIS_A STRING COMA CORCHETE_A cuerpoTabla CORCHETE_C COMA error cuerpoTabla CORCHETE_C COMA CORCHETE_A cuerpoTabla CORCHETE_C PARENTESIS_C 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-7)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-7)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-7)).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("tabla",25, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-15)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 139: // tabla ::= TABLE PARENTESIS_A STRING COMA CORCHETE_A cuerpoTabla CORCHETE_C error CORCHETE_A cuerpoTabla CORCHETE_C COMA CORCHETE_A cuerpoTabla CORCHETE_C PARENTESIS_C 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-8)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-8)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-8)).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("tabla",25, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-15)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 138: // tabla ::= TABLE PARENTESIS_A STRING COMA CORCHETE_A cuerpoTabla error COMA CORCHETE_A cuerpoTabla CORCHETE_C COMA CORCHETE_A cuerpoTabla CORCHETE_C PARENTESIS_C 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-9)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-9)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-9)).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("tabla",25, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-15)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 137: // tabla ::= TABLE PARENTESIS_A STRING COMA CORCHETE_A error CORCHETE_C COMA CORCHETE_A cuerpoTabla CORCHETE_C COMA CORCHETE_A cuerpoTabla CORCHETE_C PARENTESIS_C 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-10)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-10)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-10)).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("tabla",25, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-15)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 136: // tabla ::= TABLE PARENTESIS_A STRING COMA error cuerpoTabla CORCHETE_C COMA CORCHETE_A cuerpoTabla CORCHETE_C COMA CORCHETE_A cuerpoTabla CORCHETE_C PARENTESIS_C 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-11)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-11)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-11)).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("tabla",25, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-15)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 135: // tabla ::= TABLE PARENTESIS_A STRING error CORCHETE_A cuerpoTabla CORCHETE_C COMA CORCHETE_A cuerpoTabla CORCHETE_C COMA CORCHETE_A cuerpoTabla CORCHETE_C PARENTESIS_C 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-12)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-12)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-12)).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("tabla",25, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-15)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 134: // tabla ::= TABLE PARENTESIS_A error COMA CORCHETE_A cuerpoTabla CORCHETE_C COMA CORCHETE_A cuerpoTabla CORCHETE_C COMA CORCHETE_A cuerpoTabla CORCHETE_C PARENTESIS_C 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-13)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-13)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-13)).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("tabla",25, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-15)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 133: // tabla ::= TABLE error STRING COMA CORCHETE_A cuerpoTabla CORCHETE_C COMA CORCHETE_A cuerpoTabla CORCHETE_C COMA CORCHETE_A cuerpoTabla CORCHETE_C PARENTESIS_C 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-14)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-14)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-14)).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("tabla",25, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-15)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 132: // tabla ::= TABLE PARENTESIS_A STRING COMA CORCHETE_A cuerpoTabla CORCHETE_C COMA CORCHETE_A cuerpoTabla CORCHETE_C COMA CORCHETE_A cuerpoTabla CORCHETE_C PARENTESIS_C 
            {
              Object RESULT =null;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("tabla",25, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-15)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 131: // tabla ::= TABLE PARENTESIS_A PARENTESIS_C 
            {
              Object RESULT =null;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("tabla",25, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-2)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 130: // lista ::= LIST PARENTESIS_A STRING COMA CORCHETE_A cuerpoTabla CORCHETE_C error 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.peek()).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("lista",34, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-7)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 129: // lista ::= LIST PARENTESIS_A STRING COMA CORCHETE_A cuerpoTabla error PARENTESIS_C 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("lista",34, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-7)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 128: // lista ::= LIST PARENTESIS_A STRING COMA CORCHETE_A error CORCHETE_C PARENTESIS_C 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-2)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-2)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-2)).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("lista",34, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-7)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 127: // lista ::= LIST PARENTESIS_A STRING COMA error cuerpoTabla CORCHETE_C PARENTESIS_C 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-3)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-3)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-3)).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("lista",34, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-7)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 126: // lista ::= LIST PARENTESIS_A STRING error CORCHETE_A cuerpoTabla CORCHETE_C PARENTESIS_C 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-4)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-4)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-4)).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("lista",34, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-7)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 125: // lista ::= LIST PARENTESIS_A error COMA CORCHETE_A cuerpoTabla CORCHETE_C PARENTESIS_C 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-5)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-5)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-5)).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("lista",34, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-7)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 124: // lista ::= LIST error STRING COMA CORCHETE_A cuerpoTabla CORCHETE_C PARENTESIS_C 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-6)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-6)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-6)).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("lista",34, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-7)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 123: // lista ::= LIST PARENTESIS_A STRING COMA CORCHETE_A cuerpoTabla CORCHETE_C PARENTESIS_C 
            {
              Object RESULT =null;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("lista",34, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-7)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 122: // llamarFuncion ::= ID PARENTESIS_A parametros error 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.peek()).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("llamarFuncion",29, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-3)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 121: // llamarFuncion ::= ID PARENTESIS_A error PARENTESIS_C 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("llamarFuncion",29, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-3)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 120: // llamarFuncion ::= ID error parametros PARENTESIS_C 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-2)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-2)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-2)).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("llamarFuncion",29, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-3)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 119: // llamarFuncion ::= ID PARENTESIS_A PARENTESIS_C 
            {
              Object RESULT =null;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("llamarFuncion",29, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-2)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 118: // llamarFuncion ::= ID PARENTESIS_A parametros PARENTESIS_C 
            {
              Object RESULT =null;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("llamarFuncion",29, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-3)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 117: // funciones4 ::= inHTML 
            {
              Object RESULT =null;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("funciones4",33, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 116: // funciones3 ::= Remove 
            {
              Object RESULT =null;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("funciones3",32, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 115: // funciones3 ::= RClass 
            {
              Object RESULT =null;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("funciones3",32, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 114: // funciones3 ::= AClass 
            {
              Object RESULT =null;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("funciones3",32, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 113: // funciones3 ::= RChild 
            {
              Object RESULT =null;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("funciones3",32, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 112: // funciones3 ::= getAtt 
            {
              Object RESULT =null;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("funciones3",32, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 111: // funciones3 ::= beforeChild 
            {
              Object RESULT =null;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("funciones3",32, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 110: // funciones3 ::= Child 
            {
              Object RESULT =null;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("funciones3",32, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 109: // funciones3 ::= ChildText 
            {
              Object RESULT =null;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("funciones3",32, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 108: // funciones2 ::= optSelect 
            {
              Object RESULT =null;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("funciones2",31, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 107: // funciones2 ::= setHTML 
            {
              Object RESULT =null;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("funciones2",31, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 106: // funciones ::= funciones4 PARENTESIS_A error 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.peek()).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("funciones",30, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-2)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 105: // funciones ::= funciones4 error PARENTESIS_C 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("funciones",30, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-2)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 104: // funciones ::= error PARENTESIS_A PARENTESIS_C 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-2)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-2)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-2)).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("funciones",30, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-2)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 103: // funciones ::= funciones2 PARENTESIS_A STRING COMA STRING error 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.peek()).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("funciones",30, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-5)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 102: // funciones ::= funciones2 PARENTESIS_A STRING COMA error PARENTESIS_C 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("funciones",30, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-5)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 101: // funciones ::= funciones2 PARENTESIS_A STRING error STRING PARENTESIS_C 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-2)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-2)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-2)).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("funciones",30, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-5)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 100: // funciones ::= funciones2 PARENTESIS_A error COMA STRING PARENTESIS_C 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-3)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-3)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-3)).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("funciones",30, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-5)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 99: // funciones ::= funciones2 error STRING COMA STRING PARENTESIS_C 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-4)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-4)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-4)).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("funciones",30, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-5)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 98: // funciones ::= error PARENTESIS_A STRING COMA STRING PARENTESIS_C 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-5)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-5)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-5)).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("funciones",30, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-5)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 97: // funciones ::= funciones3 PARENTESIS_A STRING error 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.peek()).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("funciones",30, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-3)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 96: // funciones ::= funciones3 PARENTESIS_A error PARENTESIS_C 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("funciones",30, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-3)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 95: // funciones ::= funciones3 error STRING PARENTESIS_C 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-2)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-2)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-2)).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("funciones",30, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-3)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 94: // funciones ::= error PARENTESIS_A STRING PARENTESIS_C 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-3)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-3)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-3)).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("funciones",30, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-3)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 93: // funciones ::= funciones4 PARENTESIS_A PARENTESIS_C 
            {
              Object RESULT =null;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("funciones",30, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-2)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 92: // funciones ::= funciones2 PARENTESIS_A STRING COMA STRING PARENTESIS_C 
            {
              Object RESULT =null;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("funciones",30, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-5)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 91: // funciones ::= funciones3 PARENTESIS_A STRING PARENTESIS_C 
            {
              Object RESULT =null;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("funciones",30, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-3)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 90: // elementos ::= docCreateElem 
            {
              Object RESULT =null;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("elementos",35, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 89: // elementos ::= docGetElemClass 
            {
              Object RESULT =null;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("elementos",35, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 88: // elementos ::= docGetElemID 
            {
              Object RESULT =null;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("elementos",35, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 87: // obtenerElemento ::= elementos PARENTESIS_A STRING error 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.peek()).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("obtenerElemento",28, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-3)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 86: // obtenerElemento ::= elementos PARENTESIS_A error PARENTESIS_C 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("obtenerElemento",28, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-3)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 85: // obtenerElemento ::= elementos error STRING PARENTESIS_C 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-2)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-2)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-2)).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("obtenerElemento",28, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-3)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 84: // obtenerElemento ::= elementos PARENTESIS_A STRING PARENTESIS_C PUNTO error 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.peek()).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("obtenerElemento",28, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-5)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 83: // obtenerElemento ::= elementos PARENTESIS_A STRING PARENTESIS_C error funciones 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("obtenerElemento",28, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-5)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 82: // obtenerElemento ::= elementos PARENTESIS_A STRING error PUNTO funciones 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-2)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-2)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-2)).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("obtenerElemento",28, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-5)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 81: // obtenerElemento ::= elementos PARENTESIS_A error PARENTESIS_C PUNTO funciones 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-3)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-3)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-3)).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("obtenerElemento",28, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-5)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 80: // obtenerElemento ::= elementos error STRING PARENTESIS_C PUNTO funciones 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-4)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-4)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-4)).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("obtenerElemento",28, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-5)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 79: // obtenerElemento ::= error PARENTESIS_A STRING PARENTESIS_C PUNTO funciones 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-5)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-5)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-5)).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("obtenerElemento",28, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-5)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 78: // obtenerElemento ::= elementos PARENTESIS_A STRING PARENTESIS_C 
            {
              Object RESULT =null;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("obtenerElemento",28, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-3)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 77: // obtenerElemento ::= elementos PARENTESIS_A STRING PARENTESIS_C PUNTO funciones 
            {
              Object RESULT =null;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("obtenerElemento",28, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-5)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // consola ::= CONSOL PARENTESIS_A NUMIDSTR error 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.peek()).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("consola",27, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-3)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // consola ::= CONSOL PARENTESIS_A error PARENTESIS_C 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("consola",27, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-3)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // consola ::= CONSOL error NUMIDSTR PARENTESIS_C 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-2)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-2)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-2)).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("consola",27, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-3)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // consola ::= CONSOL PARENTESIS_A NUMIDSTR PARENTESIS_C 
            {
              Object RESULT =null;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("consola",27, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-3)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // cuerpo ::= cuerpo divElem 
            {
              Object RESULT =null;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("cuerpo",4, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // cuerpo ::= divElem 
            {
              Object RESULT =null;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("cuerpo",4, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // cuerpo ::= cuerpo lista 
            {
              Object RESULT =null;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("cuerpo",4, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // cuerpo ::= lista 
            {
              Object RESULT =null;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("cuerpo",4, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // cuerpo ::= cuerpo llamarFuncion 
            {
              Object RESULT =null;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("cuerpo",4, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // cuerpo ::= llamarFuncion 
            {
              Object RESULT =null;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("cuerpo",4, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // cuerpo ::= cuerpo obtenerElemento 
            {
              Object RESULT =null;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("cuerpo",4, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // cuerpo ::= obtenerElemento 
            {
              Object RESULT =null;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("cuerpo",4, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // cuerpo ::= cuerpo consola 
            {
              Object RESULT =null;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("cuerpo",4, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // cuerpo ::= consola 
            {
              Object RESULT =null;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("cuerpo",4, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // cuerpo ::= cuerpo tabla 
            {
              Object RESULT =null;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("cuerpo",4, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // cuerpo ::= tabla 
            {
              Object RESULT =null;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("cuerpo",4, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // cuerpo ::= cuerpo funcion 
            {
              Object RESULT =null;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("cuerpo",4, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // cuerpo ::= funcion 
            {
              Object RESULT =null;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("cuerpo",4, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // cuerpo ::= cuerpo asignarVariable 
            {
              Object RESULT =null;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("cuerpo",4, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // cuerpo ::= asignarVariable 
            {
              Object RESULT =null;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("cuerpo",4, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // cuerpo ::= cuerpo sentenciaFor 
            {
              Object RESULT =null;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("cuerpo",4, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // cuerpo ::= sentenciaFor 
            {
              Object RESULT =null;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("cuerpo",4, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // NI ::= STRING SUMA NUMERO 
            {
              Object RESULT =null;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("NI",20, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-2)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // NI ::= NUMERO SUMA STRING 
            {
              Object RESULT =null;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("NI",20, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-2)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // NI ::= STRING 
            {
              Object RESULT =null;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("NI",20, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // NI ::= ID 
            {
              Object RESULT =null;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("NI",20, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // NI ::= NUMERO 
            {
              Object RESULT =null;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("NI",20, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // condicionCSS2 ::= COMA STRING DOSPUNTOS 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.peek()).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("condicionCSS2",21, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-2)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // condicionCSS2 ::= COMA STRING NI 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("condicionCSS2",21, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-2)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // condicionCSS2 ::= COMA DOSPUNTOS NI 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("condicionCSS2",21, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-2)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // condicionCSS2 ::= STRING DOSPUNTOS NI 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-2)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-2)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-2)).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("condicionCSS2",21, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-2)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // condicionCSS2 ::= COMA STRING DOSPUNTOS NI condicionCSS2 
            {
              Object RESULT =null;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("condicionCSS2",21, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-4)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // condicionCSS2 ::= COMA STRING DOSPUNTOS NI 
            {
              Object RESULT =null;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("condicionCSS2",21, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-3)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // condicionCSS ::= 
            {
              Object RESULT =null;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("condicionCSS",17, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // condicionCSS ::= STRING DOSPUNTOS 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.peek()).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("condicionCSS",17, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // condicionCSS ::= STRING NI 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("condicionCSS",17, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // condicionCSS ::= DOSPUNTOS NI 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("condicionCSS",17, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // condicionCSS ::= STRING DOSPUNTOS NI condicionCSS2 
            {
              Object RESULT =null;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("condicionCSS",17, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-3)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // condicionCSS ::= STRING DOSPUNTOS NI 
            {
              Object RESULT =null;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("condicionCSS",17, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-2)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // cadena ::= ID 
            {
              Object RESULT =null;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("cadena",24, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // cadena ::= STRING 
            {
              Object RESULT =null;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("cadena",24, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // sentenciaCSS ::= CSS PARENTESIS_A cadena COMA CORCHETE_A condicionCSS CORCHETE_C error PUNTOCOMA 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("sentenciaCSS",16, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-8)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // sentenciaCSS ::= CSS PARENTESIS_A cadena COMA CORCHETE_A condicionCSS error PARENTESIS_C 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("sentenciaCSS",16, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-7)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // sentenciaCSS ::= CSS PARENTESIS_A cadena COMA error condicionCSS CORCHETE_C PARENTESIS_C 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-3)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-3)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-3)).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("sentenciaCSS",16, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-7)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // sentenciaCSS ::= CSS PARENTESIS_A cadena error CORCHETE_A condicionCSS CORCHETE_C PARENTESIS_C 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-4)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-4)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-4)).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("sentenciaCSS",16, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-7)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // sentenciaCSS ::= CSS PARENTESIS_A error COMA CORCHETE_A condicionCSS CORCHETE_C PARENTESIS_C 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-5)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-5)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-5)).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("sentenciaCSS",16, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-7)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // sentenciaCSS ::= CSS error cadena COMA CORCHETE_A condicionCSS CORCHETE_C PARENTESIS_C 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-6)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-6)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-6)).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("sentenciaCSS",16, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-7)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // sentenciaCSS ::= CSS PARENTESIS_A cadena COMA CORCHETE_A condicionCSS CORCHETE_C PARENTESIS_C 
            {
              Object RESULT =null;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("sentenciaCSS",16, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-7)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // sentenciaJS ::= JS ID error cuerpo LLAVE_C 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-2)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-2)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-2)).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("sentenciaJS",8, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-4)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // sentenciaJS ::= JS ID LLAVE_A cuerpo error 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.peek()).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("sentenciaJS",8, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-4)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // sentenciaJS ::= JS error LLAVE_A cuerpo LLAVE_C 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-3)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-3)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-3)).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("sentenciaJS",8, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-4)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // sentenciaJS ::= JS ID LLAVE_A cuerpo LLAVE_C 
            {
              Object RESULT =null;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("sentenciaJS",8, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-4)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // sentenciaHTML ::= HTML cuerpo LLAVE_C 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-2)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-2)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-2)).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("sentenciaHTML",15, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-2)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // sentenciaHTML ::= HTML LLAVE_A cuerpo 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.peek()).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("sentenciaHTML",15, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-2)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // sentenciaHTML ::= LLAVE_A cuerpo LLAVE_C 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-2)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-2)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-2)).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("sentenciaHTML",15, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-2)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // sentenciaHTML ::= LLAVE_A LLAVE_C 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("sentenciaHTML",15, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // sentenciaHTML ::= HTML LLAVE_A 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.peek()).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("sentenciaHTML",15, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // sentenciaHTML ::= HTML LLAVE_C 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("sentenciaHTML",15, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // sentenciaHTML ::= HTML LLAVE_A LLAVE_C 
            {
              Object RESULT =null;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("sentenciaHTML",15, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-2)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // sentenciaHTML ::= HTML LLAVE_A cuerpo LLAVE_C 
            {
              Object RESULT =null;
		fin="HTML { \n"+fin+"}H\n";
              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("sentenciaHTML",15, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-3)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // sentenciasInterior ::= sentenciaCSS sentenciasInterior 
            {
              Object RESULT =null;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("sentenciasInterior",14, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // sentenciasInterior ::= sentenciaCSS 
            {
              Object RESULT =null;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("sentenciasInterior",14, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // sentenciasInterior ::= sentenciaJS sentenciasInterior 
            {
              Object RESULT =null;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("sentenciasInterior",14, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // sentenciasInterior ::= sentenciaJS 
            {
              Object RESULT =null;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("sentenciasInterior",14, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // primeraSentencia ::= sentenciaHTML sentenciasInterior 
            {
              Object RESULT =null;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("primeraSentencia",23, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // primeraSentencia ::= sentenciaHTML 
            {
              Object RESULT =null;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("primeraSentencia",23, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // sentenciaMain ::= MAIN ID LLAVE_A primeraSentencia 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-3)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-3)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-3)).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("sentenciaMain",37, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-3)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // sentenciaMain ::= MAIN ID primeraSentencia LLAVE_C 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-2)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-2)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-2)).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("sentenciaMain",37, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-3)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // sentenciaMain ::= MAIN LLAVE_A primeraSentencia LLAVE_C 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-3)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-3)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-3)).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("sentenciaMain",37, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-3)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // sentenciaMain ::= ID LLAVE_A primeraSentencia LLAVE_C 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-3)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-3)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-3)).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("sentenciaMain",37, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-3)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // sentenciaMain ::= MAIN ID LLAVE_A LLAVE_C 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("sentenciaMain",37, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-3)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // sentenciaMain ::= MAIN 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.peek()).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("sentenciaMain",37, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // sentenciaMain ::= MAIN ID LLAVE_A primeraSentencia LLAVE_C 
            {
              Object RESULT =null;
		fin="MAIN "+RESULT+" { \n"+fin+"}M\n";
              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("sentenciaMain",37, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-4)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // inicio ::= error 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.peek()).value;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("inicio",0, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // inicio ::= sentenciaMain sentenciaDeclare 
            {
              Object RESULT =null;

              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("inicio",0, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // inicio ::= sentenciaMain 
            {
              Object RESULT =null;
		
                    //fin=fin+"\n";
                    Principal.codigointer=fin;
                    
              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("inicio",0, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          return CUP$CupObjeto$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= inicio EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)).value;
		RESULT = start_val;
              CUP$CupObjeto$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.elementAt(CUP$CupObjeto$top-1)), ((java_cup.runtime.Symbol)CUP$CupObjeto$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$CupObjeto$parser.done_parsing();
          return CUP$CupObjeto$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number found in internal parse table");

        }
    }
}

